##
<b>Show Object Detail Commands</b>
<b>---------------------------</b>
!||wdo|| - Display ad-hoc objects or arrays from GAC or Stack	
!||wselect|| - Display ad-hoc fields (and level fields) for an object or for all item in an array
!||wfrom|| - Perform SQL-like analysis of Heap objects enabling comparison, ||expression|| evaluation and indexed filtering.
<b>*(new)*</b> !||wpe|| - Dump Exception Object

<b>Enumerate objects</b>
<b>------------------</b>
!||windex|| - index and display objects based in different filters like object with of type HttpContext
!||wstack|| - dump unique stack objects
!||wheap|| - list objects without indexing and show thottled heap sampling
!||wgchandle|| - Dump GC root handles
<b>*(new)*</b> !||wdae|| - Dump All Exceptions

<b>Process commands</b>
<b>----------------</b>
!||wclrstack|| - Dump current stack trace (only managed thread)
<b>*(new)*</b> !||wthreads|| - show all managed threads
<b>*(new)*</b> !||wver|| - Show CLR version and extension version
<b>*(new)*</b> !||wupdate|| - Check for update
<b>*(new)*</b> !||wdomain|| - Dump all Application Domains

<b>Special</b>
<b>-------</b>

!||wdict|| - Display dictionary objects
!||whash|| - Display HashTable objects
!||whttp|| - List HttpContext Objects
!||wconfig|| - Show all .config file lines in memory 
!||wservice|| - List WCF service Objects
!||weval|| - Evaluate ||expression|| list
!||wkeyvalue|| - Display pair key/value for NameObjectCollection type objects
!||wcookie|| - Display HTTP cookies
!||wruntime|| - Display HTTP Runtime Info including Active Requests
!||wtoken|| - Display WIF tokens and cookies
<b>*(new)*</b> !||wclass|| - Dump classs layout

<b>Misc</b>
<b>----</b>

||expression|| syntax
||functions|| list *new functions*
||license|| see all licenses applied to this product

##wupdate
Check for new versions and compare with current. If a new version is found, it tries to open the update page
If the page is not in http://netext.codeplex.com, do not download

<b>Syntax:</b>
---------
!wupdate

##wdomain
Dump domain information including name, base folder, config file and modules loaded

<b>Syntax:</b>
---------
!wdomain
 
<b>Examples:</b>
---------

<i>Dump all domains</i>
----------------------------------
0:00&gt; !wdomain

Address          Domain Name                                   Modules Base Path & Config
000007fef49c3820 System                                            112 
000007fef49c2f20 Shared                                                              
000000000153b9f0 DefaultDomain                                      44 Base Path: c:\windows\system32\inetsrv\ Config: w3wp.exe.config 
000000000153c300 /LM/W3SVC/1067026433/ROOT-1-130029361030647561    238 Base Path: C:\inetpub\wwwroot\wss\VirtualDirectories\80\ Config: web.config 

##wthreads
Dump thread information

<b>Syntax:</b>
---------
!wthreads
 
<b>Examples:</b>
---------

<i>Show all managed threads</i>
----------------------------------
0:00&gt; !wthreads
   Id OSId Address          Domain           Allocation Start:End              COM  GC Type  Locks Type / Status             Last Exception
    1 0bd4 000000000211c410 000000000153b9f0 0000000184ce85f0:0000000184cea5b0 MTA  Preemptive   0 Background               
    2 147c 0000000002160150 000000000153b9f0 0000000000000000:0000000000000000 MTA  Preemptive   0 Background|Finalizer     
    3 1068 00000000021a22e0 000000000153b9f0 0000000000000000:0000000000000000 MTA  Preemptive   0 Background|Timer         
    4 12b8 00000000021a28b0 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Background               
    5 0c04 00000000053dd170 000000000153b9f0 0000000000000000:0000000000000000 MTA  Preemptive   0 Background|Wait          
    6 1614 0000000005506290 000000000153b9f0 0000000000000000:0000000000000000 MTA  Preemptive   0 Background|IOCPort       
    8 18d0 0000000005413800 000000000153c300 00000001c2355020:00000001c2356f18 MTA  Preemptive   0 Background               
    9 1ac4 0000000005413dd0 000000000153c300 0000000000000000:0000000000000000 MTA  Preemptive   0 Background               
   10 09e8 00000000054143a0 000000000153c300 00000001045f1340:00000001045f1ac0 MTA  Preemptive   1 Background|Worker         System.InvalidOperationException
   11 1aa8 0000000005414970 000000000153c300 0000000000000000:0000000000000000 MTA  Preemptive   0 Background               
   12 192c 0000000005416c50 000000000153c300 0000000000000000:0000000000000000 MTA  Preemptive   0                          
   14 15c0 0000000005573580 000000000153c300 0000000184ecb720:0000000184ecc310 MTA  Cooperative  1 Background|Worker        
   16 1668 0000000005574120 000000000153c300 00000001046439e0:0000000104643ba0 MTA  Cooperative  1 Background|Worker         System.ArgumentException
   17 1440 00000000055746f0 000000000153b9f0 00000001822fffd8:0000000182301ea8 NONE Preemptive   0 Background               
   18 1900 0000000005574cc0 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Background               
   19 10e4 0000000005575290 000000000153b9f0 00000001c12aa268:00000001c12ac1d8 NONE Preemptive   0 Background               
   23 0368 0000000005578110 000000000153c300 000000010458e450:000000010458efe0 MTA  Preemptive   3 Background|Worker        
   24 1168 0000000005576fa0 000000000153c300 0000000184ee3938:0000000184ee41d0 MTA  Cooperative  1 Background|Worker         System.UriFormatException
   25 1b50 0000000005577570 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Background               
   27 ---- 0000000005579850 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Worker|Terminated        
   28 0d6c 0000000005579e20 000000000153c300 00000001c4b13b78:00000001c4b141d0 MTA  Cooperative  1 Background|Worker         System.ArgumentException
   29 12d0 0000000005579280 000000000153c300 0000000144bbfb08:0000000144bc1008 MTA  Preemptive   1 Background|Worker         System.ArgumentException
   30 0a2c 000000000557a3f0 000000000153b9f0 00000001045c36b0:00000001045c5018 MTA  Cooperative  2 Background|Worker        
   31 13b0 000000000d8e06e0 000000000153c300 00000001045f54f0:00000001045f5ac0 MTA  Cooperative  1 Background|Worker        
   32 1224 0000000005578cb0 000000000153b9f0 0000000103cdcf60:0000000103cdea10 MTA  Preemptive   0 Background|Worker        
   33 1058 000000000d8e0cb0 000000000153c300 00000001c4afecb8:00000001c4b001d0 MTA  Preemptive   1 Background|Worker         System.UriFormatException
   34 ---- 000000000d8e1280 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Worker|Terminated        
   35 ---- 000000000d8e1850 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Worker|Terminated        
   36 141c 000000000d8e1e20 000000000153b9f0 0000000103dc1548:0000000103dc2500 MTA  Preemptive   0 Background|Worker        
   40 1480 000000000d8e3560 000000000153b9f0 00000001040dbdd0:00000001040dc2b0 MTA  Preemptive   0 Background|Worker        
   41 ---- 000000000d8e3b30 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Worker|Terminated        
   43 ---- 000000000d8fde20 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Worker|Terminated        
   44 0e8c 000000000d8fd850 000000000153c300 00000001038dd878:00000001038de8b8 MTA  Preemptive   0 Background|Worker        
   48 ---- 000000000d8fe9c0 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Worker|Terminated        
   50 1468 000000000d8ff560 000000000153c300 0000000103f94ea8:0000000103f95578 MTA  Cooperative  0 Background|Worker        
   52 1a54 000000001715be10 000000000153b9f0 0000000000000000:0000000000000000 NONE Preemptive   0 Background               


##wclass
Dump the class layout including fields, properties and modules. This command also enable breakpoint setting for methods and properties

<b>Usage:</b> !wclass &lt;expr&gt;
<b>Where:</b>
	<b>&lt;expr&gt;</b> is the Method Table of the class (you can use an expression).
 
<b>Examples:</b>
---------

<i>Dump the layout of a class</i>
----------------------------------
0:00&gt; !wclass 00000001045f0c68
// Method Table: 00000001045f0c68
// Module Address: 000007feea930000
// Debugging Mode: IgnoreSymbolStoreSequencePoints
// Filename: C:\Windows\assembly\GAC_64\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll
namespace System.Web.Configuration {

 internal class HttpConfigurationSystem: System.Configuration.Internal.IInternalConfigSystem
 {
	//
	// Fields
	//


	//
	// Static Fields
	//

	private static System.Object s_initLock;
	private static System.Boolean s_inited;
	private static System.Web.Configuration.HttpConfigurationSystem s_httpConfigSystem;
	private static System.Configuration.Internal.IConfigSystem s_configSystem;
	private static System.Web.Configuration.IConfigMapPath s_configMapPath;
	private static System.Web.Configuration.WebConfigurationHost s_configHost;
(...)

	//
	// Properties
	//

	/* property * / IsSet
	{

		// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
		// Click for breakpoint: 000007feeb282870
		internal get  { } 
	}
	/* property * / MachineConfigurationDirectory
	{

		// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
		// Click for breakpoint: 000007feeab88740
		internal get  { } 
	}
	/* property * / MachineConfigurationFilePath
	{

		// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
		// Click for breakpoint: 000007feeab886d0
		internal get  { } 
	}
	/* property * / MsCorLibDirectory
	{

		// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
		// Click for breakpoint: 000007feeab887b0
		internal get  { } 
	}
	System.String RootWebConfigurationFilePath
	{

		// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
		// Click for breakpoint: 000007feeb282b40
		internal set  { } 

		// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
		// Click for breakpoint: 000007feeab8b060
		internal get  { } 
	}
(...)

	//
	// Methods
	//


	// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
	// Click for breakpoint: 000007fef2e4abe0
	public virtual ToString();

	// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
	// Click for breakpoint: 000007fef2e52560
	public Equals(System.Object);

	// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
	// Click for breakpoint: 000007fef2e4bc70
	private static GetHashCode();

	// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
	// Click for breakpoint: 000007fef2efe630
	public static Finalize();

	// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
	// Click for breakpoint: 000007feeab8fd10
	private virtual GetSection(System.String);

	// JIT MODE: None - THIS IS ONLY VALID FOR .NET 4.5 AND BEYOND
	// Click for breakpoint: 000007feeb282b20
	private virtual RefreshConfig(System.String);

(...)
 }
}


##wpe
Dump Details of an Exception Object

<b>Usage:</b> !wpe &lt;expr&gt;
<b>Where:</b>
	<b>&lt;expr&gt;</b> is the Exception object address (you can use an expression).
 
<b>Examples:</b>
---------

<i>Dump a particular Exception</i>
----------------------------------
0:00&gt; !wpe 00000001045f0c68
Address: 00000001045f0c68
Exception Type: System.InvalidOperationException
Message: Could not retrieve a valid Windows identity.
Inner Exception: 00000001045de690 System.ServiceModel.EndpointNotFoundException There was no endpoint listening at net.pipe://localhost/s4u/022694f3-9fbd-422b-b4b2-312e25dae2a2 that could accept the message. This is often caused by an incorrect address or SOAP action. See InnerException, if present, for more details.
Stack:
SP               IP               Function
000000000c347490 000007feef2fd82c Microsoft.SharePoint.SPSecurityContext.GetWindowsIdentity()
000000000c349d60 000007feed97086a Microsoft.SharePoint.Administration.SPFarm.CurrentClaimsUserIsBoxAdministrator(Microsoft.IdentityModel.Claims.IClaimsIdentity)

HResult: 80131509


##wdae
Dump all exceptions in the heap (you must index via !windex first)

<b>Syntax:</b>
---------
!wdae
 
<b>Examples:</b>
---------

<i>Show all Exceptions in heap</i>
----------------------------------
0:00&gt; !wdae

      71 of Type: System.ArgumentException 00000001011f78c8 00000001012074a0 000000010126b268
Message: 
Inner Exception: (none)
Stack:
IP               Function
000007feef31cff6 Microsoft.SharePoint.Administration.Claims.SPClaimEncodingManager.DecodeClaimFromFormsSuffix(System.String)
000007ff0026ba43 Microsoft.SharePoint.IdentityModel.SPTokenCache.ReadToken(Byte[])


(...)

       7 of Type: System.IO.PipeException 00000001045de600 0000000141c00398 0000000142096cc8
Message: The pipe endpoint 'net.pipe://localhost/s4u/022694f3-9fbd-422b-b4b2-312e25dae2a2' could not be found on your local machine. 
Inner Exception: (none)
Stack:
(no managed stack found)


       7 of Type: System.InvalidOperationException 00000001045f0c68 0000000141c165a0 00000001420b1420
Message: Could not retrieve a valid Windows identity.
Inner Exception: System.ServiceModel.EndpointNotFoundException
Stack:
IP               Function
000007feef2fd82c Microsoft.SharePoint.SPSecurityContext.GetWindowsIdentity()
000007feed97086a Microsoft.SharePoint.Administration.SPFarm.CurrentClaimsUserIsBoxAdministrator(Microsoft.IdentityModel.Claims.IClaimsIdentity)

(...)

     135 of Type: System.Threading.ThreadAbortException 00000001011fc1e8 0000000101738cc0 0000000101742a70
Message: Thread was being aborted.
Inner Exception: (none)
Stack:
IP               Function
000007feeab96798 System.Web.HttpApplication.ExecuteStep(IExecutionStep, Boolean ByRef)


      67 of Type: System.Threading.ThreadAbortException 0000000101738258 0000000101776210 00000001021a8580
Message: Thread was being aborted.
Inner Exception: (none)
Stack:
IP               Function
0000000000000000 System.Threading.Thread.AbortInternal()
000007fef2ea4419 System.Threading.Thread.Abort(System.Object)
000007feeabc6415 System.Web.HttpResponse.End()
000007feed84fb60 Microsoft.SharePoint.Utilities.SPUtilityInternal.SendResponse(System.Web.HttpContext, Int32, System.String)
000007feed808f9a Microsoft.SharePoint.Utilities.SPUtility.SendAccessDeniedHeader(System.Exception)
000007feedca07bd Microsoft.SharePoint.ApplicationRuntime.SPRequestModule.PostAuthenticateRequestHandler(System.Object, System.EventArgs)
000007feeaba59b0 System.Web.HttpApplication+SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
000007feeab9671b System.Web.HttpApplication.ExecuteStep(IExecutionStep, Boolean ByRef)

(...)
      67 of Type: System.UnauthorizedAccessException 0000000101737f98 0000000101775f50 00000001021a82c0
Message: Attempted to perform an unauthorized operation.
Inner Exception: (none)
Stack:
(no managed stack found)


      58 of Type: System.UriFormatException 0000000101229ab0 0000000101396670 00000001014c8560
Message: Invalid URI: The format of the URI could not be determined.
Inner Exception: (none)
Stack:
IP               Function
000007fef1d976bf System.Uri.CreateThis(System.String, Boolean, System.UriKind)
000007feeda41031 Microsoft.SharePoint.Utilities.SPUrlUtility.IsUrlFull(System.String)


491 Exceptions in 13 unique type/stack combinations (duplicate types in similar stacks may be rethrows)




##wclrstack
Dump current stack trace if the thread is managed

<b>Syntax:</b>
---------
!wclrstack
 
<b>Examples:</b>
---------

<i>Show current thread stack trace</i>
----------------------------------
0:00&gt; !wclrstack
Thread Id: 0 OS Id: 1738 Locks: 0
Thread is Alive

00000087df6ee430 000007f7dbca3ea9 TestArray.Program.Main(System.String[])
00000087df6ee810 0000000000000000 GCFrame
00000087df6eed68 0000000000000000 HelperMethodFrame_PROTECTOBJ
00000087df6ef0b0 000007f7dbca367a Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()
00000087df6ef0f0 000007f81e8af8a5 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
00000087df6ef250 000007f81e8af609 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
00000087df6ef280 000007f81e8af5c7 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)
00000087df6ef2d0 000007f81e8c2d21 System.Threading.ThreadHelper.ThreadStart()
00000087df6ef5e8 0000000000000000 GCFrame
00000087df6ef918 0000000000000000 DebuggerU2MCatchHandlerFrame

<b>Hint: how to dump stack trace for all threads</b>
----------------------------------------------
Run this command

0:00&gt; <b>~*e!wclrstack</b>
Thread Id: 0 OS Id: 564 Locks: 0
Thread is Alive

Thread Id: 2 OS Id: 1d6c Locks: 0
Thread is Alive
Finalizer thread

00000087de59fc68 0000000000000000 DebuggerU2MCatchHandlerFrame
Thread Id: 7 OS Id: 944 Locks: 0
Thread is Alive

00000087ded7e858 0000000000000000 PrestubMethodFrame
00000087ded7e8c0 000007f81ca0870e System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)
00000087ded7ea60 000007f81ca16b2e System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message ByRef)
00000087ded7eb30 000007f81d028cdc System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr, Int32, IntPtr, IntPtr)
00000087ded7ebf0 000007f81d0083e7 DomainBoundILStubClass.IL_STUB_ReversePInvoke(Int64, Int32, Int64, Int64)
00000087ded7efd8 0000000000000000 InlinedCallFrame
00000087ded7efd8 0000000000000000 InlinedCallFrame
00000087ded7efa0 000007f7dbca39f8 DomainBoundILStubClass.IL_STUB_PInvoke(MSG ByRef, IntPtr, Int32, Int32, Int32)
00000087ded7f080 000007f7dbca35f2 Microsoft.VisualStudio.HostingProcess.HostProc.WaitForThreadExit()
00000087ded7f0f0 000007f7dbca2f4e Microsoft.VisualStudio.HostingProcess.HostProc.RunParkingWindowThread()
00000087ded7f170 000007f81e8af8a5 System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
00000087ded7f2d0 000007f81e8af609 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
00000087ded7f300 000007f81e8af5c7 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)
00000087ded7f350 000007f81e8c2d21 System.Threading.ThreadHelper.ThreadStart()
00000087ded7f668 0000000000000000 GCFrame
00000087ded7f998 0000000000000000 DebuggerU2MCatchHandlerFrame



##wver
Show version of the .NET framework(s) present in the process or dump. It may have more than one framework in meory
It also shows the extension version

<b>Syntax:</b>
---------
!wver
 
<b>Examples:</b>
---------

<i>Show version of .NET and extension</i>
----------------------------------
0:00&gt; !wver
Runtime(s) Found: 1
0: Filename: mscordacwks_amd64_Amd64_4.0.30319.18010.dll 
.NET Version: v4.0.30319.18010
NetExt (this extension) Version: 2.0.0.2


##wruntime
Dump all active Http Runtime information
This is equivalent to this command:
!wfrom -nospace -nofield -type System.Web.HttpRuntime where ((!_beforeFirstRequest) || _shutdownReason) "\n=========================================================================\n","Address         : ",$addr(),"\nFirst Request   : ",$tickstodatetime(_firstRequestStartTime.dateData),"\nApp Pool User   : ",_wpUserId,"\nTrust Level     : ",_trustLevel,"\nApp Domnain Id  : ",_appDomainId,"\nDebug Enabled   : ",$if(_debuggingEnabled,"True (Not recommended in production)","False"),"\nActive Requests : ",_activeRequestCount,"\nPath            : ",_appDomainAppPath,$if(_isOnUNCShare," (in a share)"," (local disk)"),"\nTemp Folder     : ",_tempDir,"\nCompiling Folder: ",_codegenDir,"\nShutdown Reason : ",$if(_shutdownReason,$enumname(_shutdownReason)+" at "+$tickstodatetime(_lastShutdownAttemptTime.dateData),"Not shutting down"),"\n\n",$if(_shutdownReason,_shutDownMessage+"n"+_shutDownStack,"")

<b>Syntax:</b>
---------
!wruntime
 
<b>Examples:</b>
---------

<i>Dumps all Active Http Runtime</i>
--------------------------------
0:00&gt;!wruntime

=========================================================================
Address         : 000000011F7244F0
First Request   : 7/23/2014 5:13:36 PM
App Pool User   : US\us-go-svcedcApp
Trust Level     : Full
App Domnain Id  : /LM/W3SVC/8989/ROOT/Services/2013v3-1-130506092168812411
Debug Enabled   : True (Not recommended in production)
Active Requests : 0n0
Path            : G:\Internet\wwwroot\contoso\Services\ (local disk)
Temp Folder     : C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Temporary ASP.NET Files
Compiling Folder: C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Temporary ASP.NET Files\contoso_Services\998f0bec\b158a7c7
Shutdown Reason : HostingEnvironment at 7/23/2014 5:25:41 PM

Directory rename change notification for 'G:\Internet\wwwroot\contoso\Services\'.
Services dir change or directory rename
HostingEnvironment initiated shutdown
HostingEnvironment caused shutdownn   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)
   at System.Environment.get_StackTrace()
   at System.Web.Hosting.HostingEnvironment.InitiateShutdownInternal()
   at System.Web.HttpRuntime.ShutdownAppDomain(String stackTrace)
   at System.Web.HttpRuntime.OnCriticalDirectoryChange(Object sender, FileChangeEvent e)
   at System.Web.FileChangesMonitor.OnSubdirChange(Object sender, FileChangeEvent e)
   at System.Web.DirectoryMonitor.FireNotifications()
   at System.Web.Util.WorkItem.CallCallbackWithAssert(WorkItemCallback callback)
   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)
   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()

##wtoken
Dump all claims for a WIF Tokens in memory or if an HttpContext is specified it lists all claims for that request

<b>Usage:</b> !wcookie [&lt;expr&gt;]
<b>Where:</b>
	<b>&lt;expr&gt;</b> is the HttpContext object address (you can use an expression). Optional. List all if not specified

<b>Examples:</b>
-------------

<i>Listing all claims in a SharePoint request using claims authentication</i>
-----------------------------------------------------------------------------
0:000&gt;  !wtoken 0000000183ce6da8
HttpContext    :  0000000183ce6da8 http://sp.contoso.com:80/Lists/Announcements/DispForm.aspx?ID=1

000000013f536688 Microsoft.IdentityModel.Tokens.SessionSecurityToken

Authentication Type: Federation
Name Claim Type    : http://schemas.microsoft.com/sharepoint/2009/08/claims/userid
Role Claim Type    : http://schemas.microsoft.com/ws/2008/06/identity/claims/role
Bootstrap Token    : 00000000ff5b0a88

Claims
================================
Type           : http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier
Issuer         : SharePoint
Original Issuer: SharePoint
Value          : contoso\administrator
============================================================================================================
Type           : http://schemas.microsoft.com/ws/2008/06/identity/claims/primarysid
Issuer         : SharePoint
Original Issuer: Windows
Value          : S-1-5-21-1385174992-979951090-295046656-500
============================================================================================================
Type           : http://schemas.microsoft.com/ws/2008/06/identity/claims/primarygroupsid
Issuer         : SharePoint
Original Issuer: Windows
Value          : S-1-5-21-1385174992-979951090-295046656-513
============================================================================================================
Type           : http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn
Issuer         : SharePoint
Original Issuer: Windows
Value          : Administrator@contoso.com
============================================================================================================
Type           : http://schemas.microsoft.com/sharepoint/2009/08/claims/userlogonname
Issuer         : SharePoint
Original Issuer: Windows
Value          : CONTOSO\Administrator
============================================================================================================
Type           : http://schemas.microsoft.com/sharepoint/2009/08/claims/userid
Issuer         : SharePoint
Original Issuer: SecurityTokenService
Value          : 0#.w|contoso\administrator
============================================================================================================
(...)

##wkeyvalue
Display pair key/value for objects that derives NameObjectCollectionBase.
Notice that this is different from HashTable and Dictionary

<b>Usage:</b> !wkeyvalue &lt;expr&gt;
<b>Where:</b>
	<b>&lt;expr&gt;</b> is the address of the object derived from NameObjectCollectionBase. Required

<b>Examples:</b>
-------------

<i>Listing Http forms</i>
------------------------
0:000&gt; !wkeyvalue 00000000eda53b98
[System.Web.HttpValueCollection]
=====================================
__SPSCEditMenu=true
=====================================
MSOTlPn_View=0
=====================================
MSOTlPn_ShowSettings=False
=====================================
MSOGallery_SelectedLibrary=
=====================================
MSOGallery_FilterString=
=====================================
MSOTlPn_Button=none
=====================================
__EVENTTARGET=
=====================================
__EVENTARGUMENT=
=====================================
__REQUESTDIGEST=0x57EE4FDFADDAC752F6531DE0D1446CAF0135B5DA5183698D255CFDB406D14128533F085AE1500ECCBCABA3E838E8F8DA4AA0BFF028FDDF0010C824F948F976C0,09 Feb 2014 15:41:30 -0000
=====================================
MSOSPWebPartManager_DisplayModeName=Browse
=====================================
MSOSPWebPartManager_OldDisplayModeName=Browse
(...)

<i>Pairs with complex types</i>
----------------------------------
0:000&gt; !wkeyvalue 000000016299ebd0
[System.Configuration.ConfigurationValues]
=====================================
key=[000000016299edc8:System.Configuration.ConfigurationValue]{  { "SourceInfo":0000000100004600 } { "Value":CollaborationAggregator_WebServiceURL } { "ValueFlags":0n1 } }
=====================================
value=[000000016299ee50:System.Configuration.ConfigurationValue]{  { "SourceInfo":0000000100004720 } { "Value":https://portal.contoso.com/_layouts/collaboration/ws/webservice.asmx } { "ValueFlags":0n1 } }

##wcookie
Dump all cookies for all Http context objects, a single context or matching a cookie filter criteria

<b>Usage:</b> !wcookie [-summary] [-name &lt;partial-name&gt;] [-value &lt;partial-value&gt;]
                       [-min &lt;expr&gt;] &lt;expr&gt;
<b>Where:</b>
	<b>-summary</b> Shows only the summary (count by key=value). Optional
	<b>-min &lt;expr&gt;</b> Only shows when the count of cookies &gt;= &lt;expr&gt; (e.g. -min 2). Optional
	<b>-name &lt;partial-name&gt;</b> ;Dump only cookies with this name (e.g -name FedAuth*). Optional
	<b>-value &lt;partial-value&gt;</b> Dump only if value match (e.g. -value a4ghj8abcd*). Optional
	<b>&lt;expr&gt;</b> is the HttpContext object address (you can use an expression). Optional. List all if not specified

<b>Examples:</b>
-------------

<i>Listing Session Cookies that repeat</i>
--------------------------------------------
0:000&gt; !wcookie -summary -name ASP.NET_* -min 2
Action Total Finished Cookie=Value
======================================================================================
(list)     3         2 ASP.NET_SessionId=0qtahu45hokrcs45052cn0a5
(list)     6         5 ASP.NET_SessionId=1ezzsuipgbqkywrz3wr0mo55
(list)    13         9 ASP.NET_SessionId=x3zmuqi21zohzz55gyefx4nv

(Total is the number total of requests and Finished is the number of finished requests)

<i>Listing requests with same cookie value</i>
--------------------------------------------
0:000&gt; !wcookie -summary -name ASP.NET_* -min 2
Action Total Finished Cookie=Value
======================================================================================
(list)     3         2 ASP.NET_SessionId=0qtahu45hokrcs45052cn0a5

0:000&gt; !wcookie -name ASP.NET_SessionId -value 0qtahu45hokrcs45052cn0a5
00000000e341db08 https://portal.contoso.com:443/GMC/RC/Documents/Constoso.pdf (200 NULL) Finished
======================================================================================
ASP.NET_SessionId=0qtahu45hokrcs45052cn0a5

1 printed

======================================================================================
00000001206530a0 https://portal.contoso.com:443/GMC/RC/Webmasters/Pages/default.aspx (200 NULL) Finished
======================================================================================
ASP.NET_SessionId=0qtahu45hokrcs45052cn0a5

1 printed

======================================================================================
00000001229a82c8 https://portal.contoso.com:443/audit/countries/br/Pages/MUSIC.aspx (200 NULL) Running (00:01:02)
======================================================================================
ASP.NET_SessionId=0qtahu45hokrcs45052cn0a5

1 printed

======================================================================================


##wdo
Display ad-hoc objects or arrays from GAC or Stack

<b>Usage:</b> !wdo [-forcearray] [-shownull] [-noheader] [-noindex] [-tokens] [-mt &lt;expr&gt;]
                   [-start &lt;expr&gt;] [-end &lt;expr&gt;] &lt;expr&gt;
<b>Where:</b>
	<b>-mt &lt;expr&gt;</b> is the method table address of the object (for value objects). Optional
	<b>-start lt;expr&gt;</b> is the starting index of an array. Optional. Default is starting array at item 0
	<b>-end &lt;expr&gt;</b> is the end index of an array. Optional. Default is ending array at max items
	<b>-forcearray</b> if not used Byte[] and Char[] arrays will show as string instead of array items. Optional
	<b>-shownull</b> if not used will show only non-empty array items. Optional
	<b>-noheader</b> if present will hide headers and show only object address, fields and values. Optional
	<b>-noindex</b> if present will not show array index (useful for .foreach). Optional
	<b>-tokens</b> if present will show class token and field token
	<b>&lt;expr&gt;</b> is the object or array address (you can use an expression). Required

<b>Improvements over !DumpObj:</b>
---------------------------
	- Object, struct and nested class fields show address value with link to detail the field. Click link to follow
	- Numeric type fields show both hex and decimal values
	- For Enum type fields it shows the type name (or type names for [Flag]Enum) along with the numeric value
	- For TimeSpan and DateTime fields it shows the string equivalent
	- For strings it show the content after the address
	- It shows the inheritance chain in the header (not interface implementations though)
	- Byte[] and Char[] objects shows as string if you do not use -forcearraty
	- By default, array objects only show non-null items
	- Static fields show the value for the first valid application domain where it is defined
	- For arrays it lists all components

<b>Examples:</b>
-------------

<i>Listing an object ad-hoc</i>
------------------------
	!wdo -tokens 00000001556e24e8
	Address: 00000001556e24e8
	EEClass: 000007feef8c2d50
	Method Table: 000007feefc40268
	Class Name: System.Runtime.Remoting.Lifetime.Lease
	Size : 96
	Instance Fields: 12
	Static Fields: 1
	Total Fields: 13
	Heap: 0
	Generation: 0
	Module: 000007feef7d1000
	Assembly: 0000000001373e00
	Domain: 000007fef2767880
	Dynamic: false
	Assembly name: C:\Windows\assembly\GAC_64\mscorlib\2.0.0.0__b77a5c561934e089\mscorlib.dll
	Inherits: System.Runtime.Remoting.Lifetime.Lease System.Object System.MarshalByRefObject (000007FEEFC40268 000007FEEFC07370 000007FEEFC0AD70)
	400018a 000007feefc07370         2000052                            System.Object +0000         __identity 0000000000000000
	400201e 000007feefc0ecf0         2000702                             System.Int32 +0020                 id 0 (0n0)
	400201f 000007feefc47fb8         2000702                          System.DateTime +0030          leaseTime -mt 000007FEEFC47FB8 00000001556E2520 10/26/2011 9:21:08 PM
	4002020 000007feefc47eb8         2000702                          System.TimeSpan +0038   initialLeaseTime -mt 000007FEEFC47EB8 00000001556E2528 00:05:00
	4002021 000007feefc47eb8         2000702                          System.TimeSpan +0040    renewOnCallTime -mt 000007FEEFC47EB8 00000001556E2530 00:02:00
	4002022 000007feefc47eb8         2000702                          System.TimeSpan +0048 sponsorshipTimeout -mt 000007FEEFC47EB8 00000001556E2538 00:02:00
	4002023 000007feefc06c50         2000702                           System.Boolean +002c         isInfinite 0 (False)
	4002024 000007feefc0f3d8         2000702             System.Collections.Hashtable +0008       sponsorTable 00000001556E2548
	4002025 000007feefc0ecf0         2000702                             System.Int32 +0024  sponsorCallThread 0 (0n0)
	4002026 000007feefc41568         2000702 System.Runtime.Remoting.Lifetime.LeaseMa +0010       leaseManager 00000001556E1FD0
	4002027 000007feefc0ad70         2000702                System.MarshalByRefObject +0018      managedObject 0000000155663A40
	4002028 000007fef03aefc0         2000702 System.Runtime.Remoting.Lifetime.LeaseSt +0028              state 2 (0n2) Active
	4002029 000007feefc0ecf0 Static  2000702                             System.Int32 +0c78             nextId NoInit

<i>Listing only items 5 to 10 (oxa) from an array</i>
----------------------------------------------
	!wdo -start 5 -end a 000000016d29cb50
	Address: 000000016d29cb50
	EEClass: 00000642780e0cf8
	Method Table: 000006427843e2a8
	Class Name: System.Collections.Hashtable+bucket[]
	Size : 576
	Rank: 1
	Components: 23
	[5]: 000000016d29cbd8
	[6]: 000000016d29cbf0
	[7]: 000000016d29cc08
	[8]: 000000016d29cc20
	[9]: 000000016d29cc38
	[10]: 000000016d29cc50
	* Note: for HashTables you can use !||whash||

<b>Compare to:</b>
-----------
	!||wselect|| - also shows add-hoc objects and arrays, however wselect enables the selection of fields (and field levels) and does not show extensive header
	!||wfrom|| - enable complex query mechanism with categories, conditions and functions but it is not as simple to use as wselect and wdo

<b>How do I get object addresses?</b>
------------------------------
	- Type <<!windex -enumtypes>> or <<!windex -tree>> to enumerate heap objects
	- Type <<~*e!wstack>> to  list all objects in the stack for all threads
	- Type <<!wheap>> to show a quick heap sampling without indexing. It will yield a throttled but quick output

##wselect
Display ad-hoc fields (and level fields) for an object or for all item in an array

<b>Usage:</b> !wselect [mt &lt;addr&gt;] [*]|([field1[.subfield1[...]], [field2[.subfield2[...]], ...] 
               from &lt;obj-or-arr-addr&gt;
<b>Where:</b>
	<b>mt &lt;addr&gt;</b> (not -mt) is the method table of the type of the object or array (for value objects). Optional
	<b>*| &lt;field-list&gt;</b> use * for all fields or list of fields (use . to list inner fields). Required
	<b>from &lt;obj-or-arr-addr&gt;</b> is the object or array address. Required


<b>Differences from !||wdo||</b>
---------------------
	- It shows one field per line 
	- There is no header except for the field type name
	- For arrays it expands all fields instead of just the object address
	- Fields can be nested as in C#. Example: !wselect myUri.m_String from 0x0ab98848

<b>Differences from !||wfrom||</b>
-----------------------
	- It accepts * for all fields or field mask (partial field names)
	- It formats known types (as in !||wdo||)
	- It does not enable filtering or ||expression|| parsing

<b>Examples:</b>
-------

<i>List what is important in a HttpContext object</i>
----------------------------------------------
	!wselect _utcTimestamp, _request._httpMethod, _request._url.m_String, _response._statusCode, _response._statusDescription from 00000001559dc070
	[System.Web.HttpContext]
	System.DateTime _utcTimestamp = -mt 000007FEEFC47FB8 00000001559DC198 10/26/2011 9:18:54 PM
	System.String _request._httpMethod = 00000001559dc5f0 POST
	System.String _request._url.m_String = 00000001559d9328 http://rviana-serv.contoso.com:80/TestClass/Service.svc/net
	(int32)System.Int32 _response._statusCode = 191 (0n401)
	System.String _response._statusDescription = 000000019568c4f8 Unauthorized

<i>List endpoint name and URI from an endpoint array</i>
------------------------------------------------
	!wselect binding.name, address.uri.m_String  from 000000015595faa0
	[System.Object[]]
	***************
	[0]: 000000015595f9a8
	[System.ServiceModel.Description.ServiceEndpoint]
	System.String binding.name = 000000015586f6b8 wsHttpBindingConfiguration
	System.String address.uri.m_String = 000000015595dfd8 http://rviana-serv.contoso.com/TestClass/Service.svc/net
	***************
	[1]: 0000000155965390
	[System.ServiceModel.Description.ServiceEndpoint]
	System.String binding.name = 0000000155872180 basicHttpBindingConfigurationJava
	System.String address.uri.m_String = 0000000155963cb0 http://rviana-serv.contoso.com/TestClass/Service.svc/jar
	***************
	[2]: 0000000155968838
	[System.ServiceModel.Description.ServiceEndpoint]
	System.String binding.name = 0000000155875940 mexBinding
	System.String address.uri.m_String = 0000000155967648 http://rviana-serv.contoso.com/TestClass/Service.svc/mex

<b>Compare to:</b>
-----------
	!||wdo|| - also shows add-hoc objects and arrays, but looks more like !DumpObj
	!||wfrom|| - enable complex query mechanism with categories, conditions and functions but it is not as simple to use as wselect and wdo


##wfrom
Perform SQL-like analysis of Heap objects enabling comparison, ||expression|| evaluation and indexed filtering.
It requires that you run !||windex|| first to index heap if you are using any fielter option (like -type)

<b>Usage:</b>
 !wfrom [-nofield] [-nospace] -mt &lt;address-list&gt;|-withpointer|-obj &lt;address&gt;
 |-array &lt;address&gt;|-type &lt;partial-type-name-list&gt;|-implememt &lt;partial-type-name-list&gt;
 |-fieldtype &lt;partial-type-name-list&gt;|-fieldname &lt;partial-field-name&gt; 
  [where (&lt;boolean-expression&lt;)]
  select &lt;expression-list&gt;

<b>Where:</b>
	Switches:
	---------
	<b>-nofield</b> Do not show the field name in the result. Optional
	<b>-nospace</b> Do not print line feed or spaces between fields. Optional
	
	Filters (choose just one of the following):
	-------------------------------------------
	<b>-mt &lt;address-list&gt;</b> List of Method Tables to include (eg. -mt 7012ab8,70ac080)
	<b>-withpointer</b> Lists all types which include pointer (objects) fields
	<b>-obj &lt;address&gt;</b> Object address (single object)
	<b>-array &lt;address&gt;</b> Array address
	<b>-type &lt;partial-type-name-list&gt;</b> List of types to include. Wildcards accepted 
		(eg. -type *HttRequest,system.servicemodel.*)
	<b>-implememt &lt;partial-type-name-list&gt;</b> List of parent types that the type must
		implement (eg. -implement *.Exception,*.Array). It does not check interfaces implemented
	<b>-fieldtype &lt;partial-type-name-list&gt;</b> List of field types that the type must
		contain (eg. -fieldtype *.String,*.object)
	<b>-fieldname &lt;partial-field-name&gt;</b> List of field names that the type must
		contain (eg. -fieldname *request,_wr)

	<b>where (&lt;boolean-expression&lt;)</b> Filters the output based on the boolean ||expression||. Optional
	<b>select &lt;expression-list&gt;</b> List of expressions which can be fields (and inner fields), expressions (eg. field1+0n10),
			and functions (eg. $addr()+$fieldoffset(_length))

<b>Differences from !||wdo||</b>
-------------------------
	- It can format the output completely
	- There is no header
	- You have to know the field names
	- Fields can be nested as in C#. Example: !wsfrom -obj 0x0ab98848 select myUri.m_String

<b>Differences from !||wselect||</b>
----------------------------- 
	- It does not accept partial field names nor *
	- It does not format common types like dates and Char[] (you should use functions for that)
	- It accepts expressions and can format output as you wish
	- It is more difficult to use but way more powerful

<b>Examples:</b>
---------

<i>List all HttpContext that did not return status 200 (OK):</i>
------------------------------------------------------------
	!wfrom -type *.HttpContext where (_response._statusCode != 0n200) select _request._url.m_String, _response._statusCode, _response._statusDescription
	_request._url.m_String: http://rviana-serv.contoso.com:80/TestClass/Service.svc/net
	_response._statusCode: 0n401
	_response._statusDescription: Unauthorized
	_request._url.m_String: http://rviana-serv.contoso.com:80/TestClass/Service.svc/net
	_response._statusCode: 0n401
	_response._statusDescription: Unauthorized

	2 Object(s) listed
	76 Object(s) skipped by filter

<i>An output similar to !aspxpages</i>
--------------------------------
	!wfrom -nospace -nofield -type *.HttpContext select $rpad($addr(),10)," ",$if(!_thread, "  --",$lpad($thread(_thread.DONT_USE_InternalThread),4))," ",$if((_timeoutSet==1),$tickstotimespan(_timeout._ticks), "Not set "), " ", $if(_response._completed || _finishPipelineRequestCalled,"Finished", $tickstotimespan($now()-_utcTimestamp.dateData)), " ", $replace($lpad(_response._statusCode,8),"0n","")," ", $rpad($isnull(_request._httpMethod,"NA"),8), " ", $isnull(_request._url.m_String, _request._filePath._virtualPath)
	00000001022B7738   -- 00:01:50 Finished    200 GET      http://sp.contoso.com:80/Style Library/Forms/AllItems.aspx
	00000001027B9C40   -- 00:01:50 00:00:41    200 GET      http://sp.contoso.com:80/_vti_bin/SiteData.asmx?disco
	0000000102E38808   -- 00:01:50 Finished    200 POST     http://sp:80/_vti_bin/Lists.asmx
	00000001030436D0   -- 00:01:50 Finished    401 GET      http://sp.contoso.com:80/Lists/Links/AllItems.aspx
	00000001034C99D8   -- 00:01:50 Finished    200 GET      http://sp.contoso.com:80/Lists/Announcements/AllItems.aspx
	0000000103F94698   -- Not set  00:00:36    200 POST     /_vti_bin/Lists.asmx
	00000001045BE510   -- 00:01:50 Finished    401 GET      http://sp.contoso.com:80/Style Library/Forms/AllItems.aspx
	00000001045F2200   58 00:01:50 00:00:41    200 GET      http://sp.contoso.com:80/FormServerTemplates/Forms/All Forms.aspx

	* Please notice the use of C++ escapes like \n and \t along with switches -nofield and -nospace. 
	** This command also include some of the extension built-in ||functions|| like $addr() and $if().

<i>Lists all strings containing system.web</i>
---------------------------------------
	0:000&gt; !wfrom -type System.String where ( $contains($string(),"system.web") ) select $addr(), $string()
	calculated: 0n5728819448
	calculated: system.web/authorization
	calculated: 0n5728821480
	calculated: &gt;system.webServer&gt;
		  &lt;security&gt;
			&lt;authentication&gt;
			  &lt;anonymousAuthentication enabled="false" /&gt;
			  &lt;basicAuthentication enabled="false" /&gt;
			  &lt;windowsAuthentication enabled="true" /&gt;
			&lt;/authentication>
		  &lt;/security>
		&lt;/system.webServer&gt;
	calculated: 0n5728857592
	calculated: system.web
	(...)
	
	* Please notice that results of field ||expression||s or ||functions|| shows as "calculated" to
	  differ from real field results. You can use function $a() to add a name for the calculated columns.
 
<i>Find all XML-like string</i>
------------------------
	0:000&gt; !wfrom -type System.String where ( $wildcardmatch($string(),"*&lt;*&gt;*&lt;*&gt;*") ) select $addr(), $string()
	calculated: 0n5728404240
	calculated: &lt;configProtectedData defaultProvider="RsaProtectedConfigurationProvider"&gt;
			&lt;providers&gt;
				&lt;add name="RsaProtectedConfigurationProvider" type="System.Configuration.RsaProtectedConfigurationProvider,System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" description="Uses RsaCryptoServiceProvider to encrypt and decrypt" keyContainerName="NetFrameworkConfigurationKey" cspProviderName="" useMachineContainer="true" useOAEP="false"/&gt;(...)
		&lt;/connectionStrings&gt;
	(...)
 
You can follow up with psscor's GCRef to find the owner of the string:
----------------------------------------------------------------------
	0:000&gt; !GCRef 0n5728404240
	Object found: 0x0000000155708310
	Parent List: 
	0x0000000155708df0 
	0:000&gt; !wdo 0x0000000155708df0
	Address: 0000000155708df0
	EEClass: 000007fee976d538
	Method Table: 000007fee97c5238
	Object Type: 4
	Class Name: System.Configuration.SectionXmlInfo
	Size : 120
	Assembly name: C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll
	Inherits: System.Object System.Configuration.SectionXmlInfo (000007FEEFC07370 000007FEE97C5238)
	40003ca 07feefc07a80 2000099  System.String +0000             _configKey 00000001556f73f8 configProtectedData
	40003cb 07feefc07a80 2000099  System.String +0008  _definitionConfigPath 00000001556eec90 machine
	(...)
	40003d5 07feefc07a80 2000099  System.String +0048                _rawXml 0000000155708310
	&lt;configProtectedData defaultProvider="RsaProtectedConfigurationProvider"&gt;
			&lt;providers&gt;
				&lt;add name="RsaProtectedConfigurationProvider" 
	(...)
			&lt;/providers&gt;
		&lt;/configProtectedData&gt;
	(...)



##windex
Index and dump managed heap types enabling tree view and to save index in disk (useful for very large dumps)

<b>Syntax</b>
------------
!windex [-quiet] [-enumtypes] [-tree] [-flush] [-short] [-ignorestate]
        [-withpointer] [-type &lt;partial-type-name-list&gt;] [-fieldname &lt;partial-field-name&gt;]
        [-fieldtype &lt;partial-type-name-list&gt;] [-implement &lt;partial-type-name-list&gt;] [-save &lt;string&gt;]
        [-load &lt;string&gt;] [-mt &lt;address-list&gt;]

<b>Where</b>
----------
	Switches:
	---------
	<b>-quiet</b> - Do not display index progress. Optional.
	<b>-enumtypes</b> - Display types with link to objects. Optional.
	<b>-tree</b> - Show types tree on a different window (WinDBG only). Optional.
	<b>-flush</b> - Fush index. Optional.
	<b>-short</b> - Display addresses only. Optional.
	<b>-ignorestate</b> - Ignore state when loading index

	Filters (choose just one of the following):
	-------------------------------------------
	<b>-type &lt;partial-type-name-list&gt;</b> - type;List of types to include wildcards accepted (eg. -type
		*HttRequest,system.servicemodel.*)
	<b>-fieldname &lt;partial-field-name&gt;</b> - List of field names that the type must
		contain (eg. -fieldname *request,_wr)
	<b>-fieldtype &lt;partial-type-name-list&gt;</b> - fieldtype;List of field types that the type must
		contain (eg. -fieldtype *.String,*.object)
	<b>-implement &lt;partial-type-name-list&gt;</b> - implement;List of parent types that the type must
		implement (eg. -implement *.Exception,*.Array)
	<b>-withpointer</b> - List all types which include pointer fields
	<b>-mt &lt;address-list&gt;</b> - List of Method Tables to include (eg. -mt 7012ab8,70ac080)

	Others:
	-------
	<b>-save <string></b> - Save index to file
	<b>-load <string></b> - Load previously saved index file

<b>Differences from !Dumpheap</b>
------------------------------
	- !windex has a much, much faster indexing (try it yourself)
	- !windex can filter by type name, types derived, types containing fields of specific types or
	  containing fields with specific names 
	- !DumpHeap -stat sorts by total memory used while <<!windex -enumtypes>> sorts by type name 
	- !windex -tree creates a tree of objects with fields that you open in another window and can interact
	- !windex does not stop just indexing just because there is a bad object in the heap
	- !windex works well in iDNA traces as it can verify context changes and reindex when necessary

<b>Differences from !||wheap||</b>
---------------------------
	- It index the heap in memory while !||wheap|| does not index
	- !||wheap|| shows the heap information per heap and generation
	- !||wheap|| by default only shows 500 objects per heap (good for heap sampling)
	- !windex creates indexes that can be used by !||wfrom||, !||whttp|| and !||wservice||
	- <b>!windex is always the best choice</b> unless you want heap sampling or heap segment information

<b>Examples:</b>
---------

<i>Index managed heap in memory and show a list of all types found and the number of objects per type</i>
---------------------------------------------------------------------------------------------------
	0:000&gt; !windex -enumtypes
	Starting indexing at 17:20:25 PM
	Indexing finished at 17:20:28 PM
	4,715,107 Bytes in 55,010 Objects
	Index took 00:00:02
	000007ff00198b28 ASP.global_asax (2)
	000007ff00212a00 CompositeType (1)
	000007ff00199340 CustomHandle.RemoveBasic (2)
	00000000013d4d40 Free (36)
	000007ff00105020 Microsoft.VisualStudio.Diagnostics.ServiceModelSink.Behavior (2)
	000007ff001055d8 Microsoft.VisualStudio.Diagnostics.ServiceModelSink.StubServerEventSink (3)
	000007fee15ddd90 Microsoft.Web.Administration.ConfigurationAttribute (1)
	000007fee15dd948 Microsoft.Web.Administration.ConfigurationElement (17)
	000007fee15dde18 Microsoft.Web.Administration.ConfigurationElementCollection (5)
	000007fee15df230 Microsoft.Web.Administration.ConfigurationSection (8)
	(...)

	Heap contains 55014 Objects in 1522 types

<i>Saves index to disk (very useful for reuse in SharePoint dumps)</i>
---------------------------------------------------------------
	0:000&gt; !windex -save c:\temp\temp.idx
	Index is up to date
	(...)
	Hash: 5be3fd81
	Index saved succesfully on c:\temp\temp.idx
 
<i>Load a previously saved index file (life safer for revisiting a large dump file)</i>
---------------------------------------------------------------------------------
	0:000&gt; !windex -load c:\temp\temp.idx
	Index file c:\temp\temp.idx was loaded
 
<i>List all httpcontext objects using the index</i>
---------------------------------------------
	0:000&gt; !windex -type *.httpcontext
	Index is up to date
	00000001559dc070 000007feda232488 System.Web.HttpContext      336   0 0
	00000001559e1fb0 000007feda232488 System.Web.HttpContext      336   0 0
	(...)
 
<i>List all objects derived from System.Exception</i>
----------------------------------------------
	0:000&gt; !windex -implement *.Exception
	Index is up to date
	 If you believe it is not, use !windex -flush to force reindex
	0000000155829fb0 000007fee97c1348 System.Configuration.ConfigurationErrorsException      168   0 0
	(...)
	00000001556601c0 000007feefc08078 System.ExecutionEngineException      136   0 0
	00000001556600b0 000007feefc07e58 System.OutOfMemoryException      136   0 0
	0000000155660138 000007feefc07f68 System.StackOverflowException      136   0 0
	0000000155660248 000007feefc08188 System.Threading.ThreadAbortException      136   0 0
	00000001556602d0 000007feefc08188 System.Threading.ThreadAbortException      136   0 0

##weval
Evaluate ad-hoc expressions. It accept some of the ||functions|| used by !||wfrom||

<b>Syntax:</b>
---------
!weval &lt;expr1&gt;[,..,&lt;exprN&gt;]
 
<b>Where:</b>
----------

	<b>&lt;expr-n&gt;</b> is a valid ad-hoc ||expression||

<b>Example:</b>
---------
<i>List type name and field from an object</i>
(mt is the fist pointer in an object layout)
---------------------------------------
	0:000&gt; !weval $typefrommt($poi(000000015582a1a0)), $fieldfromobj(000000015582a1a0, "_firstFilename")
	calculated: System.Configuration.ConfigurationErrorsException
	_firstFilename: C:\inetpub\wwwroot\TestClass\web.config

##wheap
Dump heap objects without indexing and show heap structure
<B>Do not use it in large dumps</b> (except if using with -detailsonly)

<b>Syntax:</b>
-------

!wheap [-short] [-detailsonly] [-nothrottle] [-start &lt;expr&gt;] [-end &lt;expr&gt;]
       [-type &lt;partial-type-name-list&gt;] [-mt &lt;address-list&gt;]

<b>Where:</b>
--------
  <b>-short</b> - Dump object addresses only (for .foreach processing)
  <b>-detailsonly</b> - Show heap detail and areas (no object is shown)
  <b>-nothrottle</b> - No limit for objects dumped per area. Otherwise will
                show only first 500 per area if -type or -mt are not used
  <b>-start &lt;expr&gt;</b> - start address
  <b>-end &lt;expr&gt;</b> - end address
  <b>-type &lt;partial-type-name-list&gt;</b> - List of types to dump with wildcards accepted 
                   (eg. -type *HttRequest,system.servicemodel.*)
  <b>-mt &lt;address-list&gt;</b> - List of Method Tables to include (eg. -mt 7012ab8,70ac080)
 
- If you just use !windex it will only show the first 500 objects of each heap area
- If you use -nothrottle, -type or -mt all results will be shown
- Don't use !wheap if you plan to search heap later or use !wfrom (use !windex instead)

<b>Differences from !||windex||</b>
---------------------------
	- It does NOT index the heap in memory while !||windex|| indexes
	- It shows the heap information per heap and generation
	- By default only shows 500 objects per heap (good for heap sampling)
	- !||windex|| creates indexes that can be used by !||wfrom||, !||whttp|| and !||wservice||
	- <b>!windex is always the best choice</b> unless you want heap sampling or heap segment information


<b>Examples:</b>
---------
 
<i>Display heap details only</i>
-------------------------
	0:000&gt; !wheap -detailsonly
	Heaps: 2
	Server Mode: 1    *note: 0-workstation (single heap), 1-server (one heap per processor)
	Heap [0]:
		Allocated: 00000001559e8fe8
		Card Table: 00000000024ba6b0
		Ephemeral Heap Segment: 0000000155660000
		Finalization Fill Pointers: 000000000561d4f8
		Heap Address: 00000000013803c0
		Lowest Address: 0000000155660000
		Highest Address: 00000001f5660000
		Generation Addresses:
			[0]:AllocStart(0000000155660098),AllocCxtLimit(0000000000000000),AllocCtxPtr(0000000000000000),StartSeg(0000000155660000)
			[1]:AllocStart(0000000155660080),AllocCxtLimit(0000000000000000),AllocCtxPtr(0000000000000000),StartSeg(0000000155660000)
			[2]:AllocStart(0000000155660068),AllocCxtLimit(0000000000000000),AllocCtxPtr(0000000000000000),StartSeg(0000000155660000)
			[3]:AllocStart(00000001d5660068),AllocCxtLimit(0000000000000000),AllocCtxPtr(0000000000000000),StartSeg(00000001d5660000)

	Segments:
	Segment: 0000000155660000 Start: 0000000155660068 End: 00000001556600b0 HiMark: 00000001559e8fe8 Committed: 00000001559f1000 Reserved: 0000000195660000 Next: 0000000000000000
	Segment: 00000001d5660000 Start: 00000001d5660068 End: 00000001d56811e8 HiMark: 00000001d56811e8 Committed: 00000001d5691000 Reserved: 00000001e5660000 Next: 0000000000000000
	Heap [1]:
	(... lines removed for brevity ...)
	Segments:
	Segment: 0000000195660000 Start: 0000000195660068 End: 00000001956600b0 HiMark: 0000000195744fe8 Committed: 0000000195751000 Reserved: 00000001d5660000 Next: 0000000000000000
	Segment: 00000001e5660000 Start: 00000001e5660068 End: 00000001e5660080 HiMark: 00000001e5660080 Committed: 00000001e5661000 Reserved: 00000001f5660000 Next: 0000000000000000

	Heap Areas:
	Area [0000000155660068]: 0000000155660068-0000000155660080 (        24) Heap: 0 Generation: 2 Large: 0
	Area [0000000155660080]: 0000000155660080-0000000155660098 (        24) Heap: 0 Generation: 1 Large: 0
	Area [0000000155660098]: 0000000155660098-00000001559e8fe8 (   3706704) Heap: 0 Generation: 0 Large: 0
	Area [0000000195660068]: 0000000195660068-0000000195660080 (        24) Heap: 1 Generation: 2 Large: 0
	Area [0000000195660080]: 0000000195660080-0000000195660098 (        24) Heap: 1 Generation: 1 Large: 0
	Area [0000000195660098]: 0000000195660098-0000000195744fe8 (    937808) Heap: 1 Generation: 0 Large: 0
	Area [00000001d5660068]: 00000001d5660068-00000001d56811e8 (    135552) Heap: 0 Generation: 3 Large: 1
	Area [00000001e5660068]: 00000001e5660068-00000001e5660080 (        24) Heap: 1 Generation: 3 Large: 1

<i>List only objects of type ServiceHost and HttpContext</i>
----------------------------------------------------- 
	0:000&gt; !wheap -type *.servicehost,*.httpcontext
	(...)
	000000015585ec80 000007fed1842608      248   0 0 System.ServiceModel.ServiceHost
	00000001559dc070 000007feda232488      336   0 0 System.Web.HttpContext
	00000001559e1fb0 000007feda232488      336   0 0 System.Web.HttpContext
	(...)
 
<i>List only object addresses for a particular type (to use with .foreach)</i>
-----------------------------------------------------------------------
	0:000&gt; !wheap -short -mt 000007feda232488 
	00000001559dc070
	00000001559e1fb0
	(...)

##wclass
Dump the class defintion (still in initial beta stage)

<b>Syntax:</b>
-------
 
!wclass [-mt] &lt;address&gt;

<b>Where:</b>
-------

	<b>-mt</b> - if specified the following address is a method table, not a class object
	<b>&lt;address&gt;</b> - Address of the class or the method table if -mt was specified.
					You can find class address or type method using !||wdo|| on an instance
 
<b>Examples:</b>
----------

<i>Dumps type System.String</i>
------------------------
	0:000&gt; !wclass 000007feef80e530
	// EEClass: 000007feef80e530
	// Method Table: 000007feefc07a80
	// Module: 000007feef7d1000
	// ***  Generated  ***
 
	namespace System
	{
		[String, String]
		public sealed class String: System.Object, IComparable, ICloneable, IConvertible, IConvertible, IConvertible, IEnumerable, IEnumerable
		{
			//
			//  Fields
			//
 
			protected System.Int32 m_arrayLength;
			protected System.Int32 m_stringLength;
			protected System.Char m_firstChar;
			public static System.String Empty;
			internal public static System.Char[] WhitespaceChars;
			//
			//  Const Fields
			//
 
			//
			//  Properties
			//
 
			/*property*/ FirstChar
			{
				System.String.get_FirstChar();
			}
			/*property*/ Chars
			{
				System.String.get_Chars(Int32);
			}
			/*property*/ Length
			{
				System.String.get_Length();
			}
			/*property*/ ArrayLength
			{
				System.String.get_ArrayLength();
			}
			/*property*/ Capacity
			{
				System.String.get_Capacity();
			}
			//
			//  Methods
			//
 
			System.String.ToString();
			System.String.Equals(System.Object);
			System.String.GetHashCode();
			System.Object.Finalize();
			System.String.Equals(System.String);
			System.String.CompareTo(System.Object);
			System.String.CompareTo(System.String);
			System.String.ToString(System.IFormatProvider);
			System.String.Clone();
			System.String.GetTypeCode();
			System.String.System.IConvertible.ToBoolean(System.IFormatProvider);
			System.String.System.IConvertible.ToChar(System.IFormatProvider);
			System.String.System.IConvertible.ToSByte(System.IFormatProvider);
			System.String.System.IConvertible.ToByte(System.IFormatProvider);
			System.String.System.IConvertible.ToInt16(System.IFormatProvider);
			System.String.System.IConvertible.ToUInt16(System.IFormatProvider);
		(...)
			}
		}

##whash
Dump items in a hash table

<b>Syntax:</b>
-------- 

!whash &lt;address&gt;

<b>Where:</b>
--------

<b>&lt;address&gt;</b> - Address of the hash table.
 
<b>Example:</b>
------------

<i>Dumps a hashtable</i>
------------------------
	0:000&gt; !whash 000000015568d0d0
	Buckets : 000000015568d128
 
	[0]:=========================================
	System.Object key = 000000015568c658 utf-8
	System.Object val = 000000015568d3d8
	(...)

##wdict
Dump items in a dictionary type

<b>Syntax:</b>
-----------

!wdict &lt;address&gt;

<b>Where:</b>
---------

	<b>&lt;address&gt;</b> - Address of the dictionary.
 
<b>Example:</b>
--------
 
<i>Dumps a dictionary</i>
------------------------
	0:000&gt; !wdict 00000001557d39f0
	Items   : 1
	[0]:==============================================
	System.__Canon key = 00000001557d2a70 CompilerVersion
	System.__Canon value = 00000001557d2aa8 v2.0
	(...)

##wstack
Dump objects in the current thread

<b>Syntax:</b>
---------

!wstack

* Note: Due to the nature of the stack objects this approach is not deterministic.
 
<b>Examples:</b>
---------

<i>Dumps the current stack</i>
------------------------
	0:003&gt; !wstack
	Listing objects from: 0000000001069000 to 0000000001070000 from thread: 3 [22f4]

	Address          Method Table    Heap Gen      Size Type
	00000001556da9a8 000007feda22c8a8 System.Web.Hosting.HostingEnvironment 0 0
	00000001559dd078 000007feefc08520 System.Threading.Thread 0 0
	(...)
	16 unique object(s) found in 1,572 bytes
 
<i>Dump stack of all threads</i>
-------------------------
	0:003&gt; ~*e!wstack
	Listing objects from: 0000000000284000 to 0000000000290000 from thread: 0 [21a0]

	Address          Method Table    Heap Gen      Size Type

	0 unique object(s) found in 0 bytes

	(...)

	Listing objects from: 000000000088e000 to 0000000000890000 from thread: 1 [263c]

	Address          Method Table    Heap Gen      Size Type
	00000001556da9a8 000007feda22c8a8   0  0        216 System.Web.Hosting.HostingEnvironment
	00000001559dd078 000007feefc08520   0  0        104 System.Threading.Thread
	00000001559dd128 000007feefbf62e8   0  0         48 System.Threading.ThreadPoolRequestQueue
	00000001559dcfe8 000007feefbf6cf8   0  0         32 System.__ComObject
	00000001559dd460 000007feefbf6200   0  0         48 System.Threading._ThreadPoolWaitCallback
	00000001559dd490 000007feefc02a30   0  0         72 System.Threading.ExecutionContext
	0000000155663ca8 000007feda22b938   0  0         72 System.Web.Hosting.ApplicationManager
	0000000155663a78 000007feda22bda8   0  0         56 System.Web.Hosting.ProcessHost

	8 unique object(s) found in 648 bytes

	(...)

##whttp
Dump all HttpContext objects, HttpContext following a criteria or details of a particular HttpContext
It requires !||windex|| to dump all HttContext (but not necessary if an object is specified)

<b>Syntax:</b>
--------

!whttp [-order] [-running] [-withthread] [-status &lt;decimal&gt;] [-notstatus &lt;decimal&gt;] 
       [-verb &lt;str-verb&gt;] [&lt;expr&gt;]

<b>Where:</b>
-------
	<b>-order</b> - If specified will show requests in chronological order and include the time stamp
	<b>-running</b> - If specified will show requests still running
	<b>-withthread</b> - If specified will show only requests with valid thread (it superseeds -running)
	<b>-status</b> - If specified will show only requests with the chosen status (the value is decimal not hex like 500)
	<b>-notstatus</b> - If specified will show only requests without the chosen status (the value is decimal not hex like 200)
	<b>-verb</b> - If specified will show only requests with the chosen verb (e.g. POST)
	<b>&lt;expr&gt;</b> - HttpContext Address. Optional. If not specified list all HttpContext objects

<b>Examples:</b>
------------

<i>List all HttpContext objects</i>
----------------------------
	0:000&gt; !whttp
	HttpContext    Thread Time Out Running  Status Verb     Url
	00000001022b7738   -- 00:01:50 Finished    200 GET      http://sp.contoso.com:80/Style Library/Forms/AllItems.aspx
	00000001027b9c40   52 00:01:50 00:00:41    200 GET      http://sp.contoso.com:80/_vti_bin/SiteData.asmx?disco
	0000000102e38808   -- 00:01:50 Finished    200 POST     http://sp:80/_vti_bin/Lists.asmx
	00000001030436d0   -- 00:01:50 Finished    401 GET      http://sp.contoso.com:80/Lists/Links/AllItems.aspx
	00000001034c99d8   -- 00:01:50 Finished    200 GET      http://sp.contoso.com:80/Lists/Announcements/AllItems.aspx
	0000000103f94698   -- Not set  00:00:36    200 POST     /_vti_bin/Lists.asmx
	00000001045be510   -- 00:01:50 Finished    401 GET      http://sp.contoso.com:80/Style Library/Forms/AllItems.aspx
	00000001045f2200   58 00:01:50 00:00:41    200 GET      http://sp.contoso.com:80/FormServerTemplates/Forms/All Forms.aspx
	00000001408f61d8   -- 00:01:50 Finished    200 GET      http://sp.contoso.com:80/SitePages/How To Use This Library.aspx
	(...)

<i>List requests still running</i>
----------------------------
    0:000&gt; !whttp -running
	HttpContext    Thread Time Out Running  Status Verb     Url
	00000001027b9c40   52 00:01:50 00:00:41    200 GET      http://sp.contoso.com:80/_vti_bin/SiteData.asmx?disco
	0000000103f94698   -- Not set  00:00:36    200 POST     /_vti_bin/Lists.asmx
	00000001045f2200   58 00:01:50 00:00:41    200 GET      http://sp.contoso.com:80/FormServerTemplates/Forms/All Forms.aspx

<i>List all failed requests</i>
----------------------------
    0:000&gt; !whttp -notstatus 200
	00000001030436d0   -- 00:01:50 Finished    401 GET      http://sp.contoso.com:80/Lists/Links/AllItems.aspx
	00000001045be510   -- 00:01:50 Finished    401 GET      http://sp.contoso.com:80/Style Library/Forms/AllItems.aspx

<i>List requests with valid thread in order of requests</i>
----------------------------------------------------
    0:000&gt; !whttp -withthread -order
	HttpContext      Start Time                    Thread Time Out Running  Status Verb     Url
	0000000160450808 2/9/2011 3:39:30 PM            166 00:01:50 00:02:08    200 GET      https://portal.contoso.com:443/europe/Pages/CountryHomePage.aspx?Country=Germany&Language=German
	00000000e01dcfe8 2/9/2011 3:39:44 PM            177 00:01:50 00:01:54    200 GET      https://portal.contoso.com:443/europe/HR/hronly/Pages/TPromotions.aspx
	0000000100672238 2/9/2011 3:39:47 PM            169 00:01:50 00:01:51    200 GET      https://portal.contoso.com:443/markets/europe/mcci/crm/Pages/policiesandreferences.aspx
	00000000e0a49ed0 2/9/2011 3:39:48 PM            163 00:01:50 00:01:50    200 GET      https://portal.contoso.com:443/markets/europe/regions/germany/Pages/Marketing.aspx
	00000001209f0fc0 2/9/2011 3:39:51 PM            164 00:01:50 00:01:47    200 GET      https://portal.contoso.com:443/europe/Pages/ELLPCountryHomePage.aspx?Country=Germany&Language=German
	00000000c0c16608 2/9/2011 3:39:51 PM             71 00:01:50 00:01:47    200 GET      https://portal.contoso.com:443/Advisory/transactionsrestructuring/Pages/Homepage.aspx


<i>List details of a HttpContext:</i>
---------------------------------
	0:000&gt; !whttp 0000000184d58f48

	Context Info
	================================
	Address           : 0000000184d58f48
	Target/Dump Time  : 1/17/2013 10:45:51 PM
	Request Time      : 1/17/2013 10:45:09 PM
	Running time      : 00:00:41
	Timeout           : 00:01:50
	Timeout Start Time: 1/17/2013 10:45:09 PM
	Timeout Limit Time: 1/17/2013 10:46:59 PM
	Managed Thread Id : 1668
	Managed Thread Id : 10
	HttpContext.Items[]: 0000000184d5a050

	Request Info
	================================
	POST http://sp.contoso.com:80/_vti_bin/Lists.asmx 
	Content Type    : text/xml; charset=utf-8
	Content Length  : 413
	Target in Server: C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\isapi\Lists.asmx
	Body:
	[--- Start ---]
	&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;GetListItems xmlns="http://schemas.microsoft.com/sharepoint/soap/"&gt;&lt;listName&gt;{7eff9a12-e6a0-4279-8906-1ad946ab1e8b}&lt;/listName&gt;&lt;rowLimit&gt;1000&lt;/rowLimit&gt;&lt;/GetListItems&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;
	[---  End ---]

	Response Info
	================================
	Warning: Response has not completed
	Status          : 200 (NULL)

	Server Variables
	================================
	ALL_HTTP: HTTP_CONTENT_LENGTH:413
	HTTP_CONTENT_TYPE:text/xml; charset=utf-8
	HTTP_AUTHORIZATION:NTLM TlRMTVNTUAADAAAAAAAAAFgAAAAAAAAAWAAAAAAAAABYAAAAAAAAAFgAAAAAAAAAWAAAAAAAAABYAAAANcKI4gYBsR0AAAAPnwBEKbJOCPCT3cRKw8Fchg==
	HTTP_EXPECT:100-continue
	HTTP_HOST:sp.contoso.com
	HTTP_USER_AGENT:Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client Protocol 2.0.50727.5448)
	HTTP_SOAPACTION:"http://schemas.microsoft.com/sharepoint/soap/GetListItems"

	ALL_RAW: Content-Length: 413
	Content-Type: text/xml; charset=utf-8
	Authorization: NTLM TlRMTVNTUAADAAAAAAAAAFgAAAAAAAAAWAAAAAAAAABYAAAAAAAAAFgAAAAAAAAAWAAAAAAAAABYAAAANcKI4gYBsR0AAAAPnwBEKbJOCPCT3cRKw8Fchg==
	Expect: 100-continue
	Host: sp.contoso.com
	User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client Protocol 2.0.50727.5448)
	SOAPAction: "http://schemas.microsoft.com/sharepoint/soap/GetListItems"

	APPL_MD_PATH: /LM/W3SVC/1067026433/ROOT
	APPL_PHYSICAL_PATH: C:\inetpub\wwwroot\wss\VirtualDirectories\80\
	LOGON_USER: CONTOSO\Administrator
	CONTENT_LENGTH: 413
	CONTENT_TYPE: text/xml; charset=utf-8
	GATEWAY_INTERFACE: CGI/1.1
	HTTPS: off
	INSTANCE_ID: 1067026433
	INSTANCE_META_PATH: /LM/W3SVC/1067026433
	LOCAL_ADDR: 10.10.82.152
	REMOTE_ADDR: 10.10.82.152
	REMOTE_HOST: 10.10.82.152
	REMOTE_PORT: 51608
	REQUEST_METHOD: POST
	SERVER_NAME: sp.contoso.com
	SERVER_PORT: 80
	SERVER_PORT_SECURE: 0
	SERVER_PROTOCOL: HTTP/1.1
	SERVER_SOFTWARE: Microsoft-IIS/7.5
	HTTP_CONTENT_LENGTH: 413
	HTTP_CONTENT_TYPE: text/xml; charset=utf-8
	HTTP_AUTHORIZATION: NTLM TlRMTVNTUAADAAAAAAAAAFgAAAAAAAAAWAAAAAAAAABYAAAAAAAAAFgAAAAAAAAAWAAAAAAAAABYAAAANcKI4gYBsR0AAAAPnwBEKbJOCPCT3cRKw8Fchg==
	HTTP_EXPECT: 100-continue
	HTTP_HOST: sp.contoso.com
	HTTP_USER_AGENT: Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client Protocol 2.0.50727.5448)
	HTTP_SOAPACTION: "http://schemas.microsoft.com/sharepoint/soap/GetListItems"

	You may also be interested in
	================================
	Dump HttpContext fields: !wselect * from 0000000184d58f48
	Find all stack roots   : !wfrom -obj 0000000184d58f48 select $a("Count  ", $if($strsize($stackroot($addr())),$splitsize($stackroot($addr()),","),0)), $a("Threads",$stackroot($addr()))
	Xml Formatted Request  : !wfrom -obj 0000000184d58f48 select $xml($rawfield(_request._rawContent._data))
	Xml Tree of Request    : !wfrom -obj 0000000184d58f48 select $xmltree($rawfield(_request._rawContent._data))

##wservice
Dump all WCF Services or details about a specific service (System.ServiceModel.ServiceHost)
It requires !||windex|| to dump all ServiceHost objects (but not necessary if an object is specified)

<b>Syntax:</b>
-------------

!wservice [&lt;expr&gt;]

<b>Where:</b>
------------
	<b>&lt;expr&gt;</b> - ServiceHost Address. Optional. If not specified dump all services

<b>Examples:</b>
-------------

<i>Enumerate all WCF services</i>
-----------------------------
	0:000&gt; !wservice
	Address		State        EndPoints BaseAddresses  Behaviors Throttled   Calls/Max   Sessions/Max    ConfigName,.NET Type
	000000015585ec80	Opened		0n3		0n2		0n7	True  	0n0/0n16	0n0/0n10	"Service",Service
	(...)

<i>Detail a service:</i>
-----------------------
	0:000&gt; !wservice 000000015585ec80
	Service Info
	================================
	Address            : 000000015585EC80
	Configuration Name : Service
	State              : Opened
	EndPoints          : 0n3
	Base Addresses     : 0n2
	Behaviors          : 0n7
	Runtime Type       : Service
	Is Throttled?      : True
	Calls/Max Calls    : 0n0/0n16
	Sessions/Max       : 0n0/0n10
	Events Raised      : No Event raised
	Handles Called     : OnOpeningHandle OnOpenedHandle 
	Session Mode       : False

	Extensions         : 0000000155968980

	Service Base Addresses
	================================
	http://rviana-serv.contoso.com/TestClass/Service.svc
	https://rviana-serv.contoso.com/TestClass/Service.svc

	Channels
	================================
	Address            : 0000000155984430
	Listener URI       : http://rviana-serv.contoso.com/TestClass/Service.svc/net
	Binding Name       : http://tempuri.org/:wsHttpBindingConfiguration
	Aborted            : No
	State              : Opened
	Transaction Type   : No transaction
	Listener State     : Opened
	Timeout settings   : Open [00:01:00] Close [00:01:00] Receive: [00:10:00] Send: [00:01:00]
	Server Capabilities: SupportsServerAuth [Yes] SupportsClientAuth [Yes] SupportsClientWinIdent [Yes]
	Request Prot Level : None
	Response Prot Level: None
	Events Raised      : No Event raised
	Handles Called     : OnOpeningHandle OnOpenedHandle 
	Session Mode       : False

	Address            : 000000015598BF50
	Listener URI       : http://rviana-serv.contoso.com/TestClass/Service.svc/jar
	Binding Name       : http://tempuri.org/:basicHttpBindingConfigurationJava
	Aborted            : No
	State              : Opened
	Transaction Type   : No transaction
	Listener State     : Opened
	Timeout settings   : Open [00:01:00] Close [00:01:00] Receive: [00:10:00] Send: [00:01:00]
	Server Capabilities: SupportsServerAuth [No ] SupportsClientAuth [Yes] SupportsClientWinIdent [Yes]
	Request Prot Level : None
	Response Prot Level: None
	Events Raised      : No Event raised
	Handles Called     : OnOpeningHandle OnOpenedHandle 
	Session Mode       : False

	Address            : 0000000155993C48
	Listener URI       : http://rviana-serv.contoso.com/TestClass/Service.svc/mex
	Binding Name       : http://schemas.microsoft.com/ws/2005/02/mex/bindings:mexBinding
	Aborted            : No
	State              : Opened
	Transaction Type   : No transaction
	Listener State     : Opened
	Timeout settings   : Open [00:01:00] Close [00:01:00] Receive: [00:10:00] Send: [00:01:00]
	Server Capabilities: SupportsServerAuth [No ] SupportsClientAuth [No ] SupportsClientWinIdent [No ]
	Request Prot Level : None
	Response Prot Level: None
	Events Raised      : No Event raised
	Handles Called     : OnOpeningHandle OnOpenedHandle 
	Session Mode       : False

	Address            : 000000015599A400
	Listener URI       : http://rviana-serv.contoso.com/TestClass/Service.svc
	Binding Name       : ServiceMetadataBehaviorHttpGetBinding
	Aborted            : No
	State              : Opened
	Transaction Type   : No transaction
	Listener State     : Opened
	Timeout settings   : Open [00:01:00] Close [00:01:00] Receive: [00:10:00] Send: [00:01:00]
	Server Capabilities: SupportsServerAuth [No ] SupportsClientAuth [No ] SupportsClientWinIdent [No ]
	Request Prot Level : None
	Response Prot Level: None
	Events Raised      : No Event raised
	Handles Called     : OnOpeningHandle OnOpenedHandle 
	Session Mode       : False

	Address            : 00000001559A0570
	Listener URI       : https://rviana-serv.contoso.com/TestClass/Service.svc
	Binding Name       : ServiceMetadataBehaviorHttpGetBinding
	Aborted            : No
	State              : Opened
	Transaction Type   : No transaction
	Listener State     : Opened
	Timeout settings   : Open [00:01:00] Close [00:01:00] Receive: [00:10:00] Send: [00:01:00]
	Server Capabilities: SupportsServerAuth [Yes] SupportsClientAuth [No ] SupportsClientWinIdent [No ]
	Request Prot Level : EncryptAndSign
	Response Prot Level: EncryptAndSign
	Events Raised      : No Event raised
	Handles Called     : OnOpeningHandle OnOpenedHandle 
	Session Mode       : False


	Endpoints
	================================
	Address            : 000000015595F9A8
	URI                : http://rviana-serv.contoso.com/TestClass/Service.svc/net
	Is Anonymous       : False
	Configuration Name : IService
	Type Name          : IService
	Listening Mode     : Explicit
	Class Definition   : 000007ff00212620 IService
	Behaviors          : 000000015595fa58
	Binding            : 0000000155957a80

	Address            : 0000000155965390
	URI                : http://rviana-serv.contoso.com/TestClass/Service.svc/jar
	Is Anonymous       : False
	Configuration Name : IService
	Type Name          : IService
	Listening Mode     : Explicit
	Class Definition   : 000007ff00212620 IService
	Behaviors          : 000000015595fa58
	Binding            : 0000000155960740

	Address            : 0000000155968838
	URI                : http://rviana-serv.contoso.com/TestClass/Service.svc/mex
	Is Anonymous       : False
	Configuration Name : IMetadataExchange
	Type Name          : System.ServiceModel.Description.IMetadataExchange
	Listening Mode     : Explicit
	Class Definition   : 000007fed1792170 System.ServiceModel.Description.IMetadataExchange
	Behaviors          : 000000015595fa58
	Binding            : 0000000155965c98


##expression
Expressions can be used in !||wfrom|| and !||weval||
They are different from the debug expression which can be used in almost all other commands
Expressions can be used with field names for comparison or operations including string expressions
	and they can be combined with built-in ||functions||
 


<b>Expression Syntax</b>

<b>literals</b>
--------------
Numeric literals are assumed to be hexadecimal unless it starts with 0n to specify it is decimal.
Thus, 0n32 is the same as 20 (or 0x20)

String literals starts with " (double quotes) and ends with ". To insert a double quote in a string use the
	escaped version \". Most of the regular escaped sequences in C++ works in the extension (eg. \n, \t). 

<b>Boolean (self-describing):</b>
--------------------------
!=
&gt;=
&lt;=
&gt;
&lt;
&amp;&amp; (logical and)
|| (logical or)
 
<b>Arithmetics by precedence:</b>
--------------------------
( )
^ (power 3^2 = 9)
*
/
\ (module 5\2 = 1)
+
-
&amp; (bitwise <b>and<\b> 20xff & 0xf = 0xf)
| (bitwise <b>or</b> 0xf | 0x10 = 0x1f)
 
<i>Example:</i>

0:000&gt; !weval 2^0+5*(2+8)
calculated: 0n51

* Note: for field expression samples, see !||wfrom|| examples
 
 
<b>Strings:</b>
--------
"" - it accepts C++ escapes like \n, \t, etc
+ - concatenates
==
!=
&gt;
&lt;

<b>Example with all together</b>
-------------------------------

0:000&gt; !||weval|| 3f & 10, 3f & 10 > 8, "Adams,"+" John\nDescription:\n\tIt is a common name"
calculated: 0n16
calculated: 0n1
calculated: Adams, John
Description:
	It is a common name

##functions
The ability to use functions is the most powerful feature of the extension.
All functions start with '$' sign.
Functions are what enable the data mining operations on the heap.
Below is the list by group.

<b>Syntax</b>:
------------
$&lt;function-name&gt;([&lt;expr1[,...,[exprN]]])

<b>Where:</b>
------------
<b>&lt;exprN&gt;</b> - it is an expression that can be:
	- An integer, pointer or float number literal or ||expression||
	- A string literal or ||expression||
	- A boolean ||expression|| or literal (0=false, not 0=true)
	- A field with or without inner fields separated by '.'
	- A function or function expression

<b>General Purpose:</b>
----------------
<b>$sqrt(&lt;expr&gt;)</b> - Return the square root of the expression
<b>$int(&lt;expr&gt;)</b> - Return the integer part of a float number expression
<b>$max(&lt;expr1&gt;, &lt;expr2&gt;)</b> - Return the bigger value of two expressions
<b>$if(&lt;cond&gt;, &lt;expr1&gt;, &lt;expr2&gt;)</b> - If cond is true returns expr1 or expr2 if false
<b>$poi(&lt;expr&gt;)</b> - Read pointer from memory address &lt;expr&gt;
<b>$isnull(&lt;expr1&gt;, &lt;expr2&gt;)</b> - Return &lt;expr2&gt; if expr1 is null or &lt;expr1&gt; otherwise
<b>$modulename(&lt;expr&gt;)</b> - Return module path from module address
<b>$typefrommt(&lt;expr&gt;)</b> - Return type name from the method table in &lt;expr&gt;
<b>$methodfrommd(&lt;expr&gt;)</b> - Return method signature from method definition

<i>Examples:</i>
-----------
0:000&gt; !weval $sqrt(6),5.00/2.00-$int(5.00/2.00), $max(5, 2), $if(5 &gt; 1,"5 is greater than 1", "5 is not  greater than 1"), $poi(0xff366de0), $isnull($poi(0xff366de0), "(NULL)")
calculated: 2.449490
calculated: 0.500000
calculated: 0n5
calculated: 5 is greater than 1
calculated: 00000000000E1780
calculated: 00000000000E1780

0:000&gt; !wdo 0000000195741170
Address: 0000000195741170
String: ns
EEClass: 000007feef80e530
Method Table: 000007feefc07a80
Class Name: System.String
(...)
Module: 000007feef7d1000
(...)

0:000&gt; !weval $typefrommt(000007feefc07a80), $modulename(000007feef7d1000)
calculated: System.String
calculated: C:\Windows\assembly\GAC_64\mscorlib\2.0.0.0__b77a5c561934e089\mscorlib.dll

0:000&gt; !weval $methodfrommd(000007fed9ebbb00)
calculated: System.Web.HttpContext.Unroot()


<b>Interface with Debugger:</b>
-------------------------
<b>$todbgvar(&lt;i&gt;, &lt;expr&gt;)</b> - Set the debugger pseudo register $t&lt;i&gt; to the value of &lt;expr&gt; and
	returns &lt;i&gt;
<b>$dbgeval(&lt;str&gt;)</b> - Return the debugger evaluated integer for the expression in &lt;str&gt;
<b>$dbgrun(&lt;str&gt;)</b> - Run command in &lt;str&gt; and return the string result (it cannot be used to run
	command from the extension like, for example, run a !wfrom inside a !wfrom)
*new* <b>$env(&lt;str&gt;)</b> - Return the environment variable (from PEB)



<i>Example</i>
------------
0:000&gt; !weval $dbgrun("r @ebp"), $todbgvar(1, $dbgeval("@ebp")), $tohexstring($dbgeval("@$t1")), $dbgeval("@@(sizeof(void*))"), $env("USERNAME")
calculated: ebp=ff366de0

calculated: 0n1
calculated: ff366de0
calculated: 0n8
calculated: SPSvc

<b>Xml</b>
----------
*new* <b>$xml(&lt;expr&gt;)</b> - Return the XML-indented version of the Xml string (pretty print)
*new* <b>$xmltree(&lt;expr&gt;)</b> - Return the XML tree version of the Xml string
*new* <b>$html(&lt;expr&gt;)</b> - Html encode a string

<i>Example</i>
------------
0:000&gt; !wfrom -nofield -nospace -fieldname _rawXml where (_rawXml) select "\n",$addr(),"\n", $xml(_rawXml), $xmltree(_rawXml)

00000000FFBB2C80
&lt;serverRuntime&gt;
    &lt;hostTypes&gt;
        &lt;add type="Microsoft.SharePoint.Client.SPClientServiceHost, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" /&gt;
    &lt;/hostTypes&gt;
&lt;/serverRuntime&gt;
DOCUMENT
  +- ELEMENT "serverRuntime"
    +- ELEMENT "hostTypes"
      +- ELEMENT "add", type: Microsoft.SharePoint.Client.SPClientServiceHost, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c
(...)

<b>String</b>
-------------
<b>$contains(&lt;str1&gt;, &lt;str2&gt;)</b> - Return 1 if str2 is part of string str1, 0 otherwise
<b>$substr(&lt;str&gt;, &lt;start&gt;, &lt;size&gt;)</b> - returns part of the string str 
	starting at &lt;start&gt; with &lt;size&gt; characters
<b>$wildcardmatch(&lt;str&gt;, &lt;pat&gt;)</b> - Return true if &lt;str&gt; contains pattern &lt;pat&gt; (case insensitive). pattern can use * and ?
<b>$tostring(&lt;expr&gt;)</b> - Return the string representation of the &lt;expr&gt;
<b>$tonumberstring(&lt;expr&gt;)</b> - Return the string from the numeric expression (&lt;expr&gt;)
<b>$toformattednumberstring(&lt;expr&gt;)</b> - Return the comma separated string from the numeric expression (&lt;expr&gt;)
<b>$tohexstring(&lt;expr&gt;)</b> - Return the hexadecimal string from the numeric expression (&lt;expr&gt;)
*new* <b>$val(&lt;str&gt;)</b> - Return the integer representation of the string (not compatible with 0x and 0n)
*new* <b>$strsize(&lt;str&gt;)</b> - Return the number of characters of the string
*new* <b>$replace(&lt;str&gt; &lt;pat&gt;, &lt;new-pat&gt;)</b> - Replace a pattern in a string by another
*new* <b>$split(&lt;str&gt; &lt;pat&gt;, &lt;index&gt;)</b> - Return the ith element of the string split by a pattern
*new* <b>$splitsize(&lt;str&gt; &lt;pat&gt;)</b> - Return the number of elements of the string split by a pattern
*new* <b>$ltrim(&lt;str&gt;)</b> - Remove leading spaces (left trim)
*new* <b>$rtrim(&lt;str&gt;)</b> - Remove trailing spaces (right trim)
*new* <b>$lpad(&lt;str&gt;, &lt;count&gt;)</b> - Add leading spaces (left pad)
*new* <b>$rpad(&lt;str&gt;, &lt;count&gt;)</b> - Add trailing spaces (right pad)
*new* <b>$tokenize(&lt;str&gt; &lt;index&gt;)</b> - Return the ith token from the string
*new* <b>$regex(&lt;str&gt;, &lt;pat&gt;, &lt;replace-pat&gt;)</b> - Replace &lt;str&gt; following the regex pattern &lt;pat&gt; into &lt;replace-pat&gt; ($0 = full regex match, $1=match 1, $n=match n)

<i>Examples</i>
------------
0:000&gt; !weval $contains("abcdefg","cd"), $val("255"), $substr("abcdef",2,2), $wildcardmatch("System.Net.String", "*net*"), $tostring(100), $tonumberstring(100), $toformattednumberstring(100), $tohexstring(100), $strsize("abcdef"), $replace("555-210-1212","-", "."), $split("555-210-1212","-",2), $splitsize("555-210-1212","-"),"["+$ltrim("      1234      ")+"]","["+$rtrim("      1234     ")+"]","["+$lpad("1234",0n10)+"]", "["+$rpad("1234",0n10)+"]"
calculated: 0n1                   $contains("abcdefg","cd")
calculated: 0n255                 $val("255")
calculated: cd                    $substr("abcdef",2,2)
calculated: 0n1                   $wildcardmatch("System.Net.String", "*net*")
calculated: 0n256                 $tostring(100)
calculated: 0n256                 $tonumberstring(100) 
calculated: 256.00                $toformattednumberstring(100)
calculated: 100					  $tohexstring(100)
calculated: 0n6                   $strsize("abcdef")
calculated: 555.210.1212          $replace("555-210-1212","-", ".")
calculated: 1212				  $split("555-210-1212","-",2)
calculated: 0n3					  $splitsize("555-210-1212","-")
calculated: [1234      ]          "["+$ltrim("      1234      ")+"]"
calculated: [      1234]          "["+$rtrim("      1234     ")+"]"
calculated: [      1234]          "["+$lpad("1234",0n10)+"]"
calculated: [1234      ]          "["+$rpad("1234",0n10)+"]"

0:000&gt; !weval $tokenize("token0,token1,token2,,,,,token3    token4",3),$tokenize("token0,token1,token2,,,,,token3    token4",4),$regex("000p1(2000)[3]x400:500","(\\d+)\\D+(\\d+)\\D+(\\d+)\\D+(\\d+)\\D+(\\d+)\\D+(\\d+)","$1,$2,$3,$4,$5,$6 - full match: $0")
calculated: token3  $tokenize("token0,token1,token2,,,,,token3    token4",3)
calculated: token4  $tokenize("token0,token1,token2,,,,,token3    token4",4)
calculated: 000,1,2000,3,400,500 - full match: 000p1(2000)[3]x400:500 $regex("000p1(2000)[3]x400:500","(\\d+)\\D+(\\d+)\\D+(\\d+)\\D+(\\d+)\\D+(\\d+)\\D+(\\d+)","$1,$2,$3,$4,$5,$6 - full match: $0")

For more on regex syntax, see: http://msdn.microsoft.com/en-us/library/az24scfc.aspx
NOTE: this extension is using C++ TR1 regex implementation and differences may occur

<b>Current Object:</b>
------------------
When using !||wfrom|| with a filter every match will be send to the <i>where</i> and <i>select</i> list.
Sometimes you need to have control over the properties of the current object. Note that object functions
	normally take no parameters

<b>$addr()</b> - Address of the current object
<b>$typename()</b> - Type name of the object
<b>$mt()</b> - Method table address of the object
<b>$isobj()</b> - if current object is not value type it returns 1
<b>$isvalue()</b> - if current object is value type it returns 1
<b>$fieldat(&lt;i&gt;)</b> - Return the current object's field with index &lt;i&gt;
<b>$token()</b> - Return metadata token of the current object
<b>$module()</b> - Return module address for the current object's type
<b>$string()</b> - Return first 1024 characters of the string if it is a string object
<b>$chain()</b> - Return the inheritance chain of the type of the current object
<b>$containpointer(&lt;address&gt;)</b> - Return 1 if any of the fields point to &lt;address&gt;
<b>$containfieldoftype(&lt;field-name&gt;)</b> - Return 1 if the object has at least a field with &lt;field-name&gt;
<b>$implement(&lt;type-name&gt;)</b> - Return 1 if the object inherits from &lt;type-name&gt;
<b>$rawobj()</b> - Return the string for Byte[] or Char[] array types


<i>Examples:</i>
0:000&gt; !wfrom -nofield -nospace -obj 00000001559e1fb0 select "Address: ",$addr(),"\nTypename: ",$typename(),"\nMethod Table: ",$mt(), "\nType: ", $if($isobj(), "\nObject","Value"), "\nToken: ",$token(),"\nModule: ",$module(), "\nInherits: ",$chain()
Address: 00000001559E1FB0
Typename: System.Web.HttpContext
Method Table: 000007FEDA232488
Type: Value
Token: 0000000002000064
Module: 000007FED9E41000
Inherits: System.Web.HttpContext System.Object

1 Object(s) listed

0:000&gt; !wfrom -obj 00000001957141a8 select $addr(),$typename(),$rawobj()
calculated: 00000001957141A8
calculated: System.Char[]
calculated: _lm_w3svc_1_root_testclass-1-129641373688819734[2264]

1 Object(s) listed


<b>Array Objects:</b>
-------------------
<b>$isarray()</b> - Return 1 if current object is array or 0 otherwise
<b>$arraysize()</b> - Return the number of items of the current array
<b>$arraystart()</b> - Return the address of the first element of the array
<b>$arrayitemsize()</b> - Return the size of the array element
<b>$items(i)</b> - Return the i-th linear element of the array (range 0 - $arraysize()-1)
<b>$rank()</b> - Return the number of dimensions in the array
<b>$arraydim(i)</b> - Return the number of elements for the i-th dimension of the array


<i>Examples:</i>
------------

0:000&gt; !wfrom -obj 00000001957141a8 select $addr(),$typename(),$isarray(), $arraystart(), $arraysize(), $arrayitemsize()
calculated: 00000001957141A8
calculated: System.Char[]
calculated: 0n1
calculated: 00000001957141B8
calculated: 0n54
calculated: 0n2

0:000&gt; !wfrom -obj 00000001956CC850 select $typename(), $arraysize(), $arraydim(0), $arraydim(1), $items($arraydim(0)*3+4), $rank()
calculated: System.Object[,]
calculated: 0n66 <i>(note: total items)</i>
calculated: 0n6 <i>(note: size of dimension 0)</i>
calculated: 0n11 <i>(note: size of dimension 1)</i>
calculated: 00000001956ce760 <i>(note: non-linear object[3][4] = linear object[22])</i>
calculated: 0n2 <i>(note: number of dimensions)</i>


<b>Field Functions:</b>
----------------
<b>$fieldoffset(&lt;field&gt;)</b> - Return the offset of the field within the object (it does not add the method table
	offset)
<b>$fieldaddress(&lt;field&gt;)</b> - Return the absolute address of the field 
<b>$isstaticfield(&lt;field&gt;)</b> - Return 1 if field is static, 0 otherwise
<b>$isvaluefield(&lt;field&gt;)</b> - Return 1 if field is value type, 0 otherwise
<b>$isobjfield(&lt;field&gt;)</b> - Return 1 if field is object type, 0 otherwise
<b>$fieldtypename(&lt;field&gt;)</b> - Return type name of the field
<b>$fieldmt(&lt;field&gt;)</b> - Return method table of the field
<b>$fieldtoken(&lt;field&gt;)</b> - Return metadata token of the field
<b>$fieldmodule(&lt;field&gt;)</b> - Return module address for the field
<b>$fieldfromobj(&lt;address&gt;, &lt;field-str&gt;)</b> - Return the field defined in the string at &lt;address&gt;
<b>$fieldfrommt(&lt;address&gt;, &lt;mt-address&gt;, &lt;field-str&gt;)</b> - Return the field defined in the string at &lt;address&gt;
	for a value type with Method Table &lt;mt-address&gt;
<b>$rawfield(&lt;field&gt;)</b> - Return the string for Byte[] or Char[] array fields
<b>$toguid(&lt;field&gt;)</b> - Return guid string for a guid field
<b>$enumname(&lt;field&gt;)</b> - Return the enumeration name for the field
*new* <b>$isinstack(&lt;field&gt;)</b> - Return true if field is rooted in stack (you can use $addr() to check current object)
*new* <b>$stackroot(&lt;field&gt;)</b> - Return the list of threads where the field is rooted in stack (you can use $addr() to check current object)
*new* <b>$a(&lt;field&gt;)</b> - Attribute a name to a field or expression (useful to avoid "calculated")
*new* <b>$thread(&lt;field&gt;)</b> - Return the thread id of a managed thread object
*new* <b>$hexstr(&lt;field&gt;)</b> - Return the hex string for Byte[], Char[] or Uint16 array fields (useful to print thumbprint)
*new* <b>$ipaddress(&lt;field&gt;)</b> - Return the ipv4 or ipv6 representation for System.Net.IPAddress fields

<i>Examples:</i>
-------------
0:000&gt; !wfrom -obj 000000015577dc38 select $addr(), $typename(), $fieldtypename(_extenderProviderKey), $toguid(_extenderProviderKey)
calculated: 000000015577DC38
calculated: System.ComponentModel.ReflectTypeDescriptionProvider
calculated: System.Guid
calculated: {5577a7b8-0001-0000-d8a7-775501000000}

1 Object(s) listed

0:000&gt; !wfrom -obj 00000001559e1fb0 select $addr(), $typename(), $rawfield(_request._rawContent._data)
calculated: 00000001559E1FB0
calculated: System.Web.HttpContext
calculated: &lt;s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;s:Body&gt;&lt;GetDataUsingDataContract xmlns="http://tempuri.org/"&gt;&lt;composite xmlns:a="http://schemas.datacontract.org/2004/07/" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;a:BoolValue&gt;false&lt;/a:BoolValue&gt;&lt;a:StringValue&gt;66&lt;/a:StringValue&gt;&lt;/composite&gt;&lt;/GetDataUsingDataContract&gt;&lt;/s:Body&gt;&lt;/s:Envelope&gt;

0:000&gt; !wfrom -type *.httpcontext where ($isinstack($addr())) select $a("Address  ",$addr()),$a("Thread(s)",$stackroot($addr()))
Address  : 00000001015A5198
Thread(s): 63
Address  : 0000000102281AF8
Thread(s): 52
Address  : 00000001027B9C40
Thread(s): 52
Address  : 00000001030436D0
Thread(s): 65
Address  : 00000001034C99D8
Thread(s): 59
Address  : 0000000103F94698
Thread(s): 65

0:000&gt; !wfrom -type *.HttpContext select $a("Address: ",$addr()),$if(!_thread, "  --",$thread(_thread.DONT_USE_InternalThread))
Address: : 0000000184D58F48
calculated: 49
Address: : 0000000184E1E8D0
calculated:   --
Address: : 0000000184E3DC00
calculated:   --
Address: : 0000000184E46F68
calculated:   --
Address: : 0000000184E52280
calculated: 55
Address: : 0000000184EBF228
calculated: 47
(...)

0:000&gt; !wfrom -type System.Security.Cryptography.X509Certificates.X509Certificate2 select $hexstr(m_serialNumber),$hexstr(m_thumbprint), m_issuerName!wfrom -type System.Security.Cryptography.X509Certificates.X509Certificate2 select $hexstr(m_serialNumber),$hexstr(m_thumbprint), m_issuerName
calculated: 43 6c d2 ff 84 56 9a 40 88 37 ea 67 8e 14 85 27
calculated: 
m_issuerName: CN=SharePoint Root Authority, OU=SharePoint, O=Microsoft, C=US
calculated: 
calculated: f3 7d 4e 05 b1 e4 71 70 02 90 0d 93 77 d6 ea 40 a4 72 79 bd
m_issuerName: NULL
(...)

0:000&gt; !wfrom -nospace -nofield -type System.Net.Sockets.Socket select $ipaddress(m_RightEndPoint.m_Address),":",$replace(m_RightEndPoint.m_Port,"0n","")
10.192.12.3:8731
127.0.0.1:9000

<b>Date and Time:</b>
------------------
<b>$tickstotimespan(&lt;ticks&gt;)</b> - Return the string representation of the time span from ticks
<b>$tickstodatetime(&lt;ticks&gt;)</b> - Return the string representation of date and time from ticks
<b>$timespantoticks(&lt;h&gt;, &lt;m&gt;, &lt;s&gt;)</b> - Return number of ticks for &lt;h&gt;, &lt;m&gt; and &lt;s&gt;
<b>$datetoticks(&lt;year&gt;, &lt;month&gt;, &lt;day&gt;)</b> - Return number of ticks for &lt;year&gt;, &lt;month&gt; and &lt;day&gt;
<b>$now()</b> - Current time or time the dump was captured in ticks

<i>Example:</i>
-------------

0:000&gt; !wfrom -obj 00000001559e1fb0 select $addr(), $typename(), $tickstodatetime($now()), $tickstodatetime(_utcTimestamp.dateData), $tickstotimespan($now()-_utcTimestamp.dateData)
calculated: 00000001559E1FB0
calculated: System.Web.HttpContext
calculated: 10/26/2011 9:20:24 PM
calculated: 10/26/2011 9:18:54 PM
calculated: 00:01:29

1 Object(s) listed

##wgchandle
List all rooted objects (handles) in heap.

<b>Usage:</b>
-----------
!wgchandle [-handletype &lt;partial-name-of-handle-type&gt;] [-type &lt;partial-name-of-handle-type&gt;] [-summary]


<b>Example:</b>
-----------

<i>Dump All Handles</b>
-------------------------
0:000&gt; !wgchandle
Handle           Object           Refs Type            Object Type
0000000002c61040 00000000ffda4760    0 WeakLong        System.RuntimeType+RuntimeTypeCache
0000000002c610a0 00000001812e2230    0 WeakLong        System.RuntimeType+RuntimeTypeCache
0000000002c610a8 00000001812e1e38    0 WeakLong        System.RuntimeType+RuntimeTypeCache
0000000002c610c0 00000000ffbf8aa0    0 WeakLong        System.RuntimeType+RuntimeTypeCache
(...)
00000000037285d8 0000000102f06928    1 RefCount        Microsoft.SharePoint.SP2DSafeArrayWriter
00000000037285e0 00000001c2a40b90    1 RefCount        Microsoft.SharePoint.SPSqlClient
00000000037285e8 00000001c2a35670    1 RefCount        Microsoft.SharePoint.SPSqlClient
00000000037285f0 00000001c2a35520    1 RefCount        Microsoft.SharePoint.Utilities.SPStringCallback
00000000037285f8 00000001c2a354a0    1 RefCount        Microsoft.SharePoint.Utilities.SPStringCallback
00000000037294b0 00000001810b9dd0    0 Strong          Microsoft.IdentityModel.Claims.ClaimsPrincipal
00000000037294c0 00000001c0d16520    0 Strong          Microsoft.IdentityModel.Claims.ClaimsPrincipal
000000000372a030 00000001c0ce4148    0 WeakLong        System.Reflection.Emit.DynamicResolver
000000000372a038 00000001c0ce3610    0 WeakLong        System.Reflection.Emit.DynamicResolver
000000000372a040 00000001c0ce3520    0 WeakLong        System.Reflection.Emit.DynamicResolver

   5,096 Objects Listed or met the criteria

   5,096 Handle(s) found in 6 categories
   1,134 WeakLong found
     950 Strong found
      94 WeakShort found
     440 Pinned found
   2,468 RefCount found
      10 AsyncPinned found

<i>Dump Only Pinned</i>
-----------------------
0:000&gt; !wgchandle -handletype Pinned
Handle           Object           Refs Type            Object Type
0000000002c61750 00000001ffbbb5c0    0 Pinned          System.Object[]
0000000002c61758 00000001ffbaf150    0 Pinned          System.Object[]
0000000002c61760 00000001ffba9150    0 Pinned          System.Object[]
0000000002c61768 00000001ffba1150    0 Pinned          System.Object[]
0000000002c61770 00000001ffeb8488    0 Pinned          System.Object[]
0000000002c61778 00000001ffeb6470    0 Pinned          System.Object[]
0000000002c61780 00000001ffeb4458    0 Pinned          System.Object[]
0000000002c61788 00000001ffeb2440    0 Pinned          System.Object[]
(...)


     450 Objects Listed or met the criteria
   4,646 Objects Skipped by the filter(s)

   5,096 Handle(s) found in 6 categories
   1,134 WeakLong found
     950 Strong found
      94 WeakShort found
     440 Pinned found
   2,468 RefCount found
      10 AsyncPinned found

<i>Dump Summary Only</i>
-----------------------
0:000&gt; !wgchandle -summary
Handle           Object           Refs Type            Object Type

   5,096 Objects Listed or met the criteria

   5,096 Handle(s) found in 6 categories
   1,134 WeakLong found
     950 Strong found
      94 WeakShort found
     440 Pinned found
   2,468 RefCount found
      10 AsyncPinned found




##wconfig
Dump all content of .config files in memory that can be retrieved showing the file name where it was defined and the configuration key it applyes to.
This is equivalent to this command:
!wfrom -type System.Configuration.SectionXmlInfo -nospace -nofield where (_rawXml) select "&lt;--\nKey: ", _configKey,"\nDefinition Config Path: ",_definitionConfigPath,"\nFilename: ", _filename, "\nLine: ",_lineNumber,"\n --&gt;\n","\n",_rawXml


<b>Syntax:</b>
---------

!wconfig
 
<b>Examples:</b>
---------

<i>Dumps all .config lines that can be retrieved</i>
------------------------
0:00&gt;!wconfig

&lt;--
Key: system.web/membership
Definition Config Path: machine/webroot/3
Filename: C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\WebServices\Root\web.config
Line: 0n17
 --&gt;

&lt;membership defaultProvider="i"&gt;
      &lt;providers&gt;
        &lt;clear /&gt;
        &lt;add name="i" type="Microsoft.SharePoint.Administration.Claims.SPClaimsAuthMembershipProvider, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" /&gt;
      &lt;/providers&gt;
    &lt;/membership&gt;
&lt;--
Key: system.web/roleManager
Definition Config Path: machine/webroot/3
Filename: C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\WebServices\Root\web.config
Line: 0n23
 --&gt;

&lt;roleManager enabled="true" defaultProvider="c"&gt;
      &lt;providers&gt;
        &lt;clear /&gt;
        &lt;add name="c" type="Microsoft.SharePoint.Administration.Claims.SPClaimsAuthRoleProvider, Microsoft.SharePoint, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" /&gt;
      &lt;/providers&gt;
    &lt;/roleManager&gt;
&lt;--
Key: microsoft.sharepoint/serviceApplications
Definition Config Path: machine/webroot/3
Filename: C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\WebServices\Root\web.config
Line: 0n32
 --&gt;

&lt;serviceApplications applicationId="171fdc63-2115-4975-ad5f-952bf737a7d6" /&gt;

##license

<b>GNU General Public License version 2 (GPLv2)</b>

Copyright (C) 1989, 1991 Free Software Foundation, Inc.
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

Preamble

The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.

When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.

We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.

Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and modification follow.

GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The "Program", below, refers to any such program or work, and a "work based on the Program" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term "modification".) Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.

You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.

c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.

In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.

3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.

If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.

5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.

7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.

It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.

This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.

Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.

10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.

NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.


For Boost source code:

<b>Boost Software License - Version 1.0 - August 17th, 2003</b>

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE

